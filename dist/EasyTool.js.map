{"version":3,"sources":["../src/EasyTool.js"],"names":["childProcess","execFileAsync","util","promisify","execFile","EasyTool","constructor","container","toolName","log","debug","_ensureCommands","cmds","Set","forEach","cmd","has","Error","add","_execAndLog","command","args","options","stdio","cp","spawn","Promise","resolve","reject","on","error","code","_execAndCapture","stdout","_getPackageInfo","rootDir","process","cwd","path","join","filenames","ignore","realpath","dirNames","map","filename","dirname","pkgMap","Map","dirPath","edges","rootPkg","pair","pkg","packageFilename","content","JSON","parse","encoding","dependencies","prefix","Object","entries","arr","startsWith","otherdirName","substring","length","push","pkgs","order","toposort","array","reverse","_recurse","commands","operation","pkgInfo","apply","_test","get","scripts","test","info2","basename","_clean","name","_install","clean","_build","install","build","_deploy","deploy","_checkForUncommittedChanges","_release","branch","trim","versionOp","tagName","tagDescription","suffix","isNewTag","info","warning","_rollback","ref","lastTag","penultimateTag","startAll","tmpObjMain","tmp","fileSync","tmpObjHelper","script","firstTab","tabDetails","preferActors","actorNames","getOwnPropertyNames","filter","s","endsWith","title","color","start","isLibrary","keywords","Array","isArray","includes","hasOwnProperty","detail","shell","testAll","cleanAll","installAll","buildAll","releaseAll","deployAll","rollbackAll","run","argv","boolean","string","alias","a","r","version","fullVersion","_","toLowerCase","shift","help","actors","root"],"mappings":"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","sourcesContent":["import { sync as globSync } from \"glob\"\nimport parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport toposort from \"toposort\"\nimport { readFile, writeFile, remove, exists, ensureDir } from \"fs-extra\"\nimport path from \"path\"\nimport process from \"process\"\nimport childProcess from \"child_process\"\nimport tmp from \"tmp-promise\"\nimport { sync as commandExistsSync } from \"command-exists\"\nimport util from \"util\"\n\nchildProcess.execFileAsync = util.promisify(childProcess.execFile)\n\nexport class EasyTool {\n  constructor(container) {\n    this.toolName = container.toolName\n    this.log = container.log\n    this.debug = !!container.debug\n  }\n\n  _ensureCommands(cmds) {\n    this.cmds = this.cmds || new Set()\n\n    cmds.forEach((cmd) => {\n      if (!this.cmds.has(cmd) && !commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  _execAndLog(command, args, options = {}) {\n    options.stdio = \"inherit\"\n\n    const cp = childProcess.spawn(command, args, options)\n\n    return new Promise((resolve, reject) => {\n      cp.on(\"error\", (error) => {\n        reject(error)\n      })\n\n      cp.on(\"exit\", function (code) {\n        if (code !== 0) {\n          reject(new Error(`'${command}' returned ${code}`))\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  async _execAndCapture(command, args, options) {\n    return (await childProcess.execFileAsync(command, args, options)).stdout\n  }\n\n  async _getPackageInfo(rootDir) {\n    rootDir = rootDir || process.cwd()\n\n    if (!(await exists(path.join(rootDir, \"package.json\")))) {\n      throw new Error(\n        \"The current directory does not contain a package.json file\"\n      )\n    }\n\n    const filenames = globSync(\"**/package.json\", {\n      ignore: [\"**/node_modules/**\", \"**/scratch/**\"],\n      realpath: true,\n      cwd: rootDir,\n    })\n    const dirNames = filenames.map((filename) => path.dirname(filename))\n    const pkgMap = new Map(dirNames.map((dirPath) => [dirPath, {}]))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirPath, pkg] = pair\n      const packageFilename = dirPath + \"/package.json\"\n      let content = null\n\n      try {\n        content = JSON.parse(\n          await readFile(packageFilename, { encoding: \"utf8\" })\n        )\n      } catch (error) {\n        this.log.error(`Reading ${packageFilename}`)\n        throw error\n      }\n\n      pkg.content = content\n\n      if (dirPath === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = \"file:\"\n\n        Object.entries(content.dependencies).forEach((arr) => {\n          if (arr[1].startsWith(prefix)) {\n            const otherdirName = path.resolve(\n              path.join(dirPath, arr[1].substring(prefix.length))\n            )\n\n            if (pkgMap.has(otherdirName)) {\n              edges.push([dirPath, otherdirName])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirNames, edges).reverse(),\n      rootPkg,\n    }\n  }\n\n  async _recurse(commands, operation, options) {\n    this.pkgInfo = await this._getPackageInfo(options.rootDir)\n    this._ensureCommands(commands)\n\n    for (const dirPath of this.pkgInfo.order) {\n      await operation.apply(this, [dirPath, options])\n    }\n  }\n\n  async _test(dirPath) {\n    const pkg = this.pkgInfo.pkgs.get(dirPath)\n\n    if (pkg.content.scripts && pkg.content.scripts.test) {\n      this.log.info2(`Testing '${path.basename(dirPath)}'...`)\n      await this._execAndLog(\"npm\", [\"test\"], { cwd: dirPath })\n    }\n  }\n\n  async _clean(dirPath) {\n    const name = path.basename(dirPath)\n\n    this.log.info2(`Cleaning '${name}'...`)\n    await remove(path.join(dirPath, \"node_modules\"))\n    await remove(path.join(dirPath, \"package-lock.json\"))\n    await remove(path.join(dirPath, \"dist\"))\n    await remove(path.join(dirPath, \"build\"))\n  }\n\n  async _install(dirPath, options = {}) {\n    const name = path.basename(dirPath)\n\n    if (options.clean) {\n      await this._clean(dirPath)\n    }\n\n    this.log.info2(`Installing modules in '${name}'...`)\n    await this._execAndLog(\"npm\", [\"install\"], { cwd: dirPath })\n  }\n\n  async _build(dirPath, options = {}) {\n    const pkg = this.pkgInfo.pkgs.get(dirPath)\n    const name = path.basename(dirPath)\n\n    if (options.install) {\n      await this._install(dirPath)\n    }\n\n    if (pkg.content.scripts && pkg.content.scripts.build) {\n      this.log.info2(`Building '${name}'...`)\n      await this._execAndLog(\"npm\", [\"run\", \"build\"], { cwd: dirPath })\n    }\n  }\n\n  async _deploy(dirPath, options = {}) {\n    const pkg = this.pkgInfo.pkgs.get(dirPath)\n    const name = path.basename(dirPath)\n\n    if (pkg.content.scripts && pkg.content.scripts.deploy) {\n      this.log.info2(`Deploying '${name}'...`)\n      await this._execAndLog(\"npm\", [\"run\", \"deploy\"], {\n        cwd: dirPath,\n      })\n    }\n  }\n\n  async _checkForUncommittedChanges(dirPath) {\n    this.log.info2(\"Checking for uncommitted changes...\")\n    try {\n      await this._execAndCapture(\n        \"git\",\n        [\"diff-index\", \"--quiet\", \"HEAD\", \"--\"],\n        { cwd: dirPath }\n      )\n    } catch (error) {\n      throw new Error(\n        \"There are uncomitted changes - commit or stash them and try again\"\n      )\n    }\n  }\n\n  async _release(dirPath, options = {}) {\n    await this._checkForUncommittedChanges(dirPath)\n\n    const branch =\n      options.branch ||\n      (\n        await this._execAndCapture(\"git\", [\"rev-parse\", \"--abbrev-ref\", \"HEAD\"])\n      ).trim()\n    const name = path.basename(dirPath)\n\n    if (branch === \"HEAD\") {\n      throw new Error(\"Cannot do release from a detached HEAD state\")\n    }\n\n    this.log.info2(`Starting release of '${name}' on branch '${branch}'...`)\n    this.log.info2(`Checking out '${branch}'...`)\n    await this._execAndLog(\"git\", [\"checkout\", branch], { cwd: dirPath })\n    this.log.info2(\"Pulling latest...\")\n    await this._execAndLog(\"git\", [\"pull\"], { cwd: dirPath })\n    this.log.info2(\"Updating version...\")\n    await ensureDir(path.resolve(dirPath, \"scratch\"))\n\n    await this._execAndLog(\"npx\", [\"stampver\", options.versionOp, \"-u\"], {\n      cwd: dirPath,\n    })\n\n    let tagName = await readFile(\n      path.resolve(dirPath, \"scratch/version.tag.txt\")\n    )\n    let tagDescription = await readFile(\n      path.resolve(dirPath, \"scratch/version.desc.txt\")\n    )\n\n    if (branch !== \"master\") {\n      const suffix = \"-\" + branch\n\n      tagName += suffix\n      tagDescription += suffix\n    }\n\n    let isNewTag = true\n    try {\n      await this._execAndCapture(\"git\", [\"rev-parse\", tagName], {\n        cwd: dirPath,\n      })\n      isNewTag = false\n    } catch (error) {\n      this.log.info(`Confirmed that '${tagName}' is a new tag`)\n    }\n\n    if (!isNewTag) {\n      this.log.warning(\n        `Tag '${tagName}' already exists and will not be overwritten`\n      )\n    }\n\n    try {\n      if (options.clean) {\n        await this._clean(dirPath)\n      }\n      await this._install(dirPath)\n      await this._build(dirPath)\n      await this._test(dirPath)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      await this._execAndLog(\"git\", [\"checkout\", branch, \".\"], { cwd: dirPath })\n      throw new Error(`Failed to build ${name} on branch '${branch}'`)\n    }\n\n    this.log.info2(\"Staging version changes...\")\n    await this._execAndLog(\"git\", [\"add\", \":/\"], { cwd: dirPath })\n    this.log.info(\"Committing version changes...\")\n    await this._execAndLog(\"git\", [\"commit\", \"-m\", tagDescription], {\n      cwd: dirPath,\n    })\n\n    if (isNewTag) {\n      this.log.info2(\"Tagging...\")\n      await this._execAndLog(\n        \"git\",\n        [\"tag\", \"-a\", tagName, \"-m\", tagDescription],\n        { cwd: dirPath }\n      )\n    }\n\n    this.log.info2(\"Pushing to Git...\")\n    await this._execAndLog(\"git\", [\"push\", \"--follow-tags\"], { cwd: dirPath })\n\n    if (options.deploy) {\n      await this._deploy(dirPath)\n    }\n\n    this.log.info(`Finished release of '${name}' on branch '${branch}'`)\n  }\n\n  async _rollback(dirPath, options = {}) {\n    await this._checkForUncommittedChanges()\n\n    const ref =\n      options.branch ||\n      (\n        await this._execAndCapture(\n          \"git\",\n          [\"rev-parse\", \"--abbrev-ref\", \"HEAD\"],\n          { cwd: dirPath }\n        )\n      ).trim()\n    const name = path.basename(dirPath)\n\n    this.log.info2(`Starting rollback of '${name}' from ref '${ref}'...`)\n\n    const lastTag = (\n      await this._execAndCapture(\n        \"git\",\n        [\"describe\", \"--tags\", \"--abbrev=0\", ref],\n        { cwd: dirPath }\n      )\n    ).trim()\n    const penultimateTag = await this._execAndCapture(\n      \"git\",\n      [\"describe\", \"--tags\", \"--abbrev=0\", lastTag + \"~1\"],\n      { cwd: dirPath }\n    )\n\n    this.log.info2(`Rolling back to tag '${penultimateTag}'...`)\n    await this._execAndLog(\"git\", [\"checkout\", penultimateTag], {\n      cwd: dirPath,\n    })\n\n    try {\n      if (options.clean) {\n        await this._clean(dirPath)\n      }\n      await this._install(dirPath)\n      await this._build(dirPath)\n      await this._test(dirPath)\n    } catch (error) {\n      await this._execAndLog(\"git\", [\"checkout\", penultimateTag, \".\"], {\n        cwd: dirPath,\n      })\n      throw new Error(`Failed to build '${penultimateTag}'`)\n    }\n\n    if (options.deploy) {\n      await this._deploy(dirPath)\n    }\n\n    this.log.info(`Finished rollback of '${name}' from ref '${ref}'`)\n  }\n\n  async startAll(options) {\n    this.pkgInfo = await this._getPackageInfo(options.rootDir)\n    this._ensureCommands([\"osascript\"])\n\n    const tmpObjMain = tmp.fileSync()\n    const tmpObjHelper = tmp.fileSync()\n\n    await writeFile(\n      tmpObjHelper.name,\n      `# function for setting iTerm2 titles\nfunction title {\n  printf \"\\\\x1b]0;%s\\\\x7\" \"$1\"\n}\n\n# function for setting iTerm2 tab colors\nfunction tab-color {\n  printf \"\\\\x1b]6;1;bg;red;brightness;%s\\\\x7\" \"$1\"\n  printf \"\\\\x1b]6;1;bg;green;brightness;%s\\\\x7\" \"$2\"\n  printf \"\\\\x1b]6;1;bg;blue;brightness;%s\\\\x7\" \"$3\"\n}\n`\n    )\n\n    let script = `\ntell application \"iTerm\"\n  tell (create window with default profile)\n    `\n    let firstTab = true\n\n    // Loop through package.json dirs\n    for (const dirPath of this.pkgInfo.order) {\n      const pkg = this.pkgInfo.pkgs.get(dirPath)\n\n      if (!pkg.content.scripts) {\n        continue\n      }\n\n      let tabDetails = []\n\n      if (options.preferActors) {\n        const actorNames = Object.getOwnPropertyNames(\n          pkg.content.scripts\n        ).filter((s) => s.startsWith(\"actor:\") && !s.endsWith(\":debug\"))\n\n        if (actorNames.length > 0) {\n          tabDetails = actorNames.map((name) => ({\n            name,\n            title: name.substring(\"actor:\".length),\n            color: \"255 198 0\",\n          }))\n        }\n      }\n\n      if (tabDetails.length === 0) {\n        if (!pkg.content.scripts.start) {\n          continue\n        }\n\n        const isLibrary =\n          pkg.content.keywords &&\n          ((Array.isArray(pkg.content.keywords) &&\n            pkg.content.keywords.includes(\"library\")) ||\n            pkg.content.keywords.hasOwnProperty(\"library\"))\n\n        tabDetails = [\n          {\n            name: \"start\",\n            title: path.basename(dirPath),\n            color: isLibrary ? \"0 255 0\" : \"0 198 255\",\n          },\n        ]\n      }\n\n      tabDetails.forEach((detail) => {\n        if (firstTab) {\n          script += `\n    tell current session of current tab\n      write text \"cd ${dirPath}; title ${detail.title}; tab-color ${detail.color}; npm run ${detail.name}\"\n    end tell\n`\n          firstTab = false\n        } else {\n          script += `\n    set newTab to (create tab with default profile)\n    tell newTab\n      tell current session of newTab\n        write text \"cd ${dirPath}; title ${detail.title}; tab-color ${detail.color}; npm run ${detail.name}\"\n      end tell\n    end tell\n`\n        }\n      })\n    }\n    script += `\n  end tell\nend tell\n`\n\n    await writeFile(tmpObjMain.name, script)\n\n    if (this.debug) {\n      this.log.info(script)\n    }\n\n    await this._execAndLog(\n      `source ${tmpObjHelper.name}; osascript < ${tmpObjMain.name}`,\n      [],\n      {\n        shell: \"/bin/bash\",\n      }\n    )\n  }\n\n  async testAll(options) {\n    await this._recurse([\"npm\"], this._test, options)\n  }\n\n  async cleanAll(options) {\n    await this._recurse([\"npm\"], this._clean, options)\n  }\n\n  async installAll(options) {\n    await this._recurse([\"npm\"], this._install, options)\n  }\n\n  async buildAll(options) {\n    await this._recurse([\"npm\"], this._build, options)\n  }\n\n  async releaseAll(options) {\n    await this._recurse(\n      [\"stampver\", \"git\", \"npx\", \"npm\"],\n      this._release,\n      options\n    )\n  }\n\n  async deployAll(options) {\n    await this._recurse([\"npm\"], this._deploy, options)\n  }\n\n  async rollbackAll(options) {\n    await this._recurse(\n      [\"stampver\", \"git\", \"npx\", \"npm\"],\n      this._rollback,\n      options\n    )\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [\"help\", \"version\", \"clean\", \"install\", \"actors\", \"debug\"],\n      string: [\"branch\", \"root\"],\n      alias: {\n        a: \"actors\",\n        r: \"root\",\n      },\n    }\n    const args = parseArgs(argv, options)\n\n    this.debug = args.debug\n\n    if (args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    let command = \"help\"\n\n    if (args._.length > 0) {\n      command = args._[0].toLowerCase()\n      args._.shift()\n    }\n\n    switch (command) {\n      case \"start\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} start [options]\n\nDescription:\n\nRecursively runs 'npm start' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --actors, -a    If one or more 'actor:*' scripts are found in the package.json,\n                  run those instead of the 'start' script, if it exists.\n`)\n          return 0\n        }\n        await this.startAll({ preferActors: !!args.actors, rootDir: args.root })\n        break\n\n      case \"clean\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} clean\n\nDescription:\n\nRecursively deletes all 'dist' and 'node_modules' directories, and 'package-lock.json' files.\n`)\n          return 0\n        }\n        await this.cleanAll({ rootDir: args.root })\n        break\n\n      case \"install\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} install\n\nDescription:\n\nRecursively runs 'npm install' in all directories containing 'package.json' (except 'node_modules/**').\n\nOptions:\n  --clean         Runs a clean before installing\n  `)\n          return 0\n        }\n        await this.installAll({ clean: !!args.clean, rootDir: args.root })\n        break\n\n      case \"build\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} build\n\nDescription:\n\nRecursively runs 'npm run build' in all directories containing 'package.json' (except 'node_modules/**').\n\nOptions:\n  --install       Recursively runs 'npm install' before building\n  --clean         If '--install' is specified, does a '--clean' first\n`)\n          return 0\n        }\n        await this.buildAll({\n          clean: !!args.clean,\n          install: !!args.install,\n          rootDir: args.root,\n        })\n        break\n\n      case \"test\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} test\n\nDescription:\n\nRecursively runs 'npm test' in all directories containing 'package.json' (except 'node_modules/**').\n`)\n          return 0\n        }\n        await this.testAll({ rootDir: args.root })\n        break\n\n      case \"deploy\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} deploy\n\nDescription:\n\nRecursively runs 'npm run deploy' in all directories containing 'package.json' (except 'node_modules/**').\nWill colorize Ansible output if detected.\n`)\n          return 0\n        }\n        await this.deployAll({ rootDir: args.root })\n        break\n\n      case \"release\":\n        if (args.help) {\n          this.log\n            .info(`Usage: ${this.toolName} release <version-operation> [options]\n\nDescription:\n\nRelease a package, including running a versioning operation (as defined in the 'version.json5' files),\nthen run 'install', 'lint', 'build' and 'test' scripts from 'package.json', tag the commit and\npush changes. Optionally run the package 'deploy' script.\n\nOptions:\n  --deploy      Run 'deploy' script if other release steps succeed\n  --branch      Will operate on a specific branch. Defaults to 'master'\n  --clean       Do an 'easy clean' operation before doing release steps\n`)\n          return 0\n        }\n        await this.releaseAll({\n          versionOp: args._[0],\n          deploy: !!args.deploy,\n          branch: args.branch,\n          clean: !!args.clean,\n          rootDir: args.root,\n        })\n        break\n\n      case \"rollback\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} rollback [options]\n\nDescription:\n\nRollback to last release, 'install', 'build' and 'test'. Optionally run a 'deploy'.\n\nOptions:\n  --deploy      Run a deployment after a success release\n  --branch      Will operate on a specific branch. Defaults to 'master'.\n  --clean       Clean before installing\n`)\n          return 0\n        }\n        await this.rollbackAll({\n          deploy: !!args.deploy,\n          branch: args.branch,\n          clean: !!args.clean,\n          rootDir: args.root,\n        })\n        break\n\n      case \"help\":\n      default:\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nDescription:\n\nEasily install, build, test, release or deploy npm based packages.\n\nThe current directory should contain a package.json, which can be an empty file.\nWill recursively operate on all package.json files in a source tree.\n\nCommands:\n  start       Run 'npm start' in new terminal tabs.\n              Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm run build'\n  deploy      Run 'npm run deploy'\n  test        Run 'npm test'\n  install     Run 'npm install'\n  clean       Remove 'node_modules', distribution and build files\n  release     Update version, build, test, tag and push to origin\n  rollback    Rollback to last tagged release, build and test\n\nGlobal Options:\n  --root      Root directory for project. Default is CWD.\n  --help      Shows this help\n  --version   Shows the tool version\n  --debug     Enable debugging output\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"],"file":"EasyTool.js"}