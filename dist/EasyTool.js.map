{"version":3,"sources":["../src/EasyTool.js"],"names":["EasyTool","constructor","toolName","log","options","debug","ensureCommands","cmds","Set","forEach","cmd","has","Error","add","getPackageInfo","filenames","ignore","realpath","dirNames","map","filename","path","dirname","pkgMap","Map","dirName","edges","rootPkg","pair","pkg","packageFilename","content","JSON","parse","encoding","error","process","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherdirName","resolve","join","substring","length","push","pkgs","order","toposort","array","reverse","execAndLog","command","Promise","reject","cp","re","RegExp","stdout","on","data","s","toString","replace","ansible","ansibleOK","ansibleChanged","ansibleSkipping","ansibleError","info","stderr","code","execAndCapture","output","startAll","pkgInfo","tmpObjMain","tmp","fileSync","tmpObjHelper","name","script","firstTab","get","scripts","tabDetails","preferActors","actorNames","getOwnPropertyNames","filter","endsWith","title","color","start","isLibrary","keywords","Array","isArray","includes","hasOwnProperty","basename","detail","shell","_test","test","info2","testAll","_clean","cleanAll","_install","clean","installAll","_build","install","build","buildAll","_deploy","deploy","deployAll","_release","version","defaultBranch","trim","branch","incrFlag","tagName","tagDescription","suffix","releaseAll","run","argv","boolean","alias","a","args","fullVersion","_","toLowerCase","shift","help","actors"],"mappings":"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","sourcesContent":["import { sync as globSync } from \"glob\"\nimport parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport toposort from \"toposort\"\nimport { readFile, writeFile, remove, exists, ensureDir } from \"fs-extra\"\nimport path from \"path\"\nimport process from \"process\"\nimport { exec } from \"child_process\"\nimport tmp from \"tmp\"\nimport { sync as commandExistsSync } from \"command-exists\"\n\nexport class EasyTool {\n  constructor(toolName, log, options) {\n    options = options || {}\n    this.toolName = toolName\n    this.log = log\n    this.debug = options.debug\n  }\n\n  ensureCommands(cmds) {\n    this.cmds = this.cmds || new Set()\n\n    cmds.forEach((cmd) => {\n      if (!this.cmds.has(cmd) && !commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  async getPackageInfo() {\n    if (!(await exists(\"package.json\"))) {\n      throw new Error(\n        \"The current directory does not contain a package.json file\"\n      )\n    }\n\n    const filenames = globSync(\"**/package.json\", {\n      ignore: [\"**/node_modules/**\", \"**/scratch/**\"],\n      realpath: true,\n    })\n    const dirNames = filenames.map((filename) => path.dirname(filename))\n    const pkgMap = new Map(dirNames.map((dirName) => [dirName, {}]))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirName, pkg] = pair\n      const packageFilename = dirName + \"/package.json\"\n      let content = null\n\n      try {\n        content = JSON.parse(\n          await readFile(packageFilename, { encoding: \"utf8\" })\n        )\n      } catch (error) {\n        this.log.error(`Reading ${packageFilename}`)\n        throw error\n      }\n\n      pkg.content = content\n\n      if (dirName === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = \"file:\"\n\n        Object.entries(content.dependencies).forEach((arr) => {\n          if (arr[1].startsWith(prefix)) {\n            const otherdirName = path.resolve(\n              path.join(dirName, arr[1].substring(prefix.length))\n            )\n\n            if (pkgMap.has(otherdirName)) {\n              edges.push([dirName, otherdirName])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirNames, edges).reverse(),\n      rootPkg,\n    }\n  }\n\n  execAndLog(command, options = {}) {\n    return new Promise((resolve, reject) => {\n      const cp = exec(command, options)\n      const re = new RegExp(/\\n$/)\n\n      cp.stdout.on(\"data\", (data) => {\n        const s = data.toString().replace(re, \"\")\n\n        if (options.ansible) {\n          if (s.startsWith(\"ok: \")) {\n            this.log.ansibleOK(s)\n          } else if (s.startsWith(\"changed: \")) {\n            this.log.ansibleChanged(s)\n          } else if (s.startsWith(\"skipping: \")) {\n            this.log.ansibleSkipping(s)\n          } else if (s.startsWith(\"error: \")) {\n            this.log.ansibleError(s)\n          } else {\n            this.log.info(s)\n          }\n        } else {\n          this.log.info(s)\n        }\n      })\n\n      cp.stderr.on(\"data\", (data) => {\n        const s = data.toString().replace(re, \"\")\n\n        if (s !== \"npm\" && s !== \"notice\" && s !== \"npm notice\") {\n          this.log.info(s)\n        }\n      })\n\n      cp.on(\"error\", (error) => {\n        reject(error)\n      })\n\n      cp.on(\"exit\", function(code) {\n        if (code !== 0) {\n          reject(new Error(\"Exit code non-zero\"))\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  execAndCapture(command, options) {\n    return new Promise((resolve, reject) => {\n      const cp = exec(command, options)\n      let output = \"\"\n\n      cp.stdout.on(\"data\", (data) => {\n        output += data.toString()\n      })\n\n      cp.on(\"error\", (error) => {\n        reject(error)\n      })\n\n      cp.on(\"exit\", function(code) {\n        if (code !== 0) {\n          reject(new Error(\"Exit code non-zero\"))\n        } else {\n          resolve(output)\n        }\n      })\n    })\n  }\n\n  async startAll(options) {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"osascript\"])\n\n    const tmpObjMain = tmp.fileSync()\n    const tmpObjHelper = tmp.fileSync()\n\n    await writeFile(\n      tmpObjHelper.name,\n      `# function for setting iTerm2 titles\nfunction title {\n  printf \"\\\\x1b]0;%s\\\\x7\" \"$1\"\n}\n\n# function for setting iTerm2 tab colors\nfunction tab-color {\n  printf \"\\\\x1b]6;1;bg;red;brightness;%s\\\\x7\" \"$1\"\n  printf \"\\\\x1b]6;1;bg;green;brightness;%s\\\\x7\" \"$2\"\n  printf \"\\\\x1b]6;1;bg;blue;brightness;%s\\\\x7\" \"$3\"\n}\n`\n    )\n\n    let script = `\ntell application \"iTerm\"\n  tell (create window with default profile)\n    `\n    let firstTab = true\n\n    // Loop through package.json dirs\n    for (const dirName of this.pkgInfo.order) {\n      const pkg = this.pkgInfo.pkgs.get(dirName)\n\n      if (!pkg.content.scripts) {\n        continue\n      }\n\n      let tabDetails = []\n\n      if (options.preferActors) {\n        const actorNames = Object.getOwnPropertyNames(\n          pkg.content.scripts\n        ).filter((s) => s.startsWith(\"actor:\") && !s.endsWith(\":debug\"))\n\n        if (actorNames.length > 0) {\n          tabDetails = actorNames.map((name) => ({\n            name,\n            title: name.substring(\"actor:\".length),\n            color: \"255 198 0\",\n          }))\n        }\n      }\n\n      if (tabDetails.length === 0) {\n        if (!pkg.content.scripts.start) {\n          continue\n        }\n\n        const isLibrary =\n          pkg.content.keywords &&\n          ((Array.isArray(pkg.content.keywords) &&\n            pkg.content.keywords.includes(\"library\")) ||\n            pkg.content.keywords.hasOwnProperty(\"library\"))\n\n        tabDetails = [\n          {\n            name: \"start\",\n            title: path.basename(dirName),\n            color: isLibrary ? \"0 255 0\" : \"0 198 255\",\n          },\n        ]\n      }\n\n      tabDetails.forEach((detail) => {\n        if (firstTab) {\n          script += `\n    tell current session of current tab\n      write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n    end tell\n`\n          firstTab = false\n        } else {\n          script += `\n    set newTab to (create tab with default profile)\n    tell newTab\n      tell current session of newTab\n        write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n      end tell\n    end tell\n`\n        }\n      })\n    }\n    script += `\n  end tell\nend tell\n`\n\n    await writeFile(tmpObjMain.name, script)\n\n    if (this.debug) {\n      this.log.info(script)\n    }\n\n    await this.execAndLog(\n      `source ${tmpObjHelper.name}; osascript < ${tmpObjMain.name}`,\n      {\n        shell: \"/bin/bash\",\n      }\n    )\n  }\n\n  async _test(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n\n    if (pkg.content.scripts && pkg.content.scripts.test) {\n      this.log.info2(`Testing '${path.basename(dirName)}'...`)\n      await this.execAndLog(`npm test`, { cwd: dirName })\n    }\n  }\n\n  async testAll() {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._test(dirName)\n    }\n  }\n\n  async _clean(dirName) {\n    const name = path.basename(dirName)\n\n    this.log.info2(`Cleaning '${name}'...`)\n    await remove(path.join(dirName, \"node_modules\"))\n    await remove(path.join(dirName, \"package-lock.json\"))\n    await remove(path.join(dirName, \"dist\"))\n    await remove(path.join(dirName, \"build\"))\n  }\n\n  async cleanAll() {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._clean(dirName)\n    }\n  }\n\n  async _install(dirName, options = {}) {\n    const name = path.basename(dirName)\n\n    if (options.clean) {\n      await this._clean(dirName)\n    }\n\n    this.log.info2(`Installing modules in '${name}'...`)\n    await this.execAndLog(`npm install`, { cwd: dirName })\n  }\n\n  async installAll(options) {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._install(dirName, options)\n    }\n  }\n\n  async _build(dirName, options = {}) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n    const name = path.basename(dirName)\n\n    if (options.install) {\n      await this._install(dirName)\n    }\n\n    if (pkg.content.scripts && pkg.content.scripts.build) {\n      this.log.info2(`Building '${name}'...`)\n      await this.execAndLog(\"npm run build\", { cwd: dirName })\n    }\n  }\n\n  async buildAll(options) {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._build(dirName, options)\n    }\n  }\n\n  async _deploy(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n    const name = path.basename(dirName)\n\n    if (pkg.content.scripts && pkg.content.scripts.deploy) {\n      this.log.info2(`Deploying '${name}'...`)\n      await this.execAndLog(\"npm run deploy\", {\n        cwd: dirName,\n        ansible: true,\n      })\n    }\n  }\n\n  async deployAll() {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._deploy(dirName)\n    }\n  }\n\n  async _release(dirName, options = {}) {\n    if (\n      options.version !== \"major\" &&\n      options.version !== \"minor\" &&\n      options.version !== \"patch\"\n    ) {\n      throw new Error(\n        `Major, minor or patch number must be incremented for release`\n      )\n    }\n\n    this.log.info2(\"Checking for uncommitted changes...\")\n    try {\n      await this.execAndLog(\"git diff-index --quiet HEAD --\")\n    } catch (error) {\n      throw new Error(\n        \"There are uncomitted changes - commit or stash them and try again\"\n      )\n    }\n\n    let defaultBranch = await this.execAndCapture(\n      \"git rev-parse --abbrev-ref HEAD\"\n    )\n\n    if (defaultBranch === \"HEAD\") {\n      defaultBranch = \"master\"\n    } else {\n      defaultBranch = defaultBranch.trim() // Get rid of newline\n    }\n\n    const branch = options.branch || defaultBranch\n    const name = path.basename(dirName)\n\n    this.log.info2(`Starting release of '${name}'...`)\n    this.log.info2(`Checking out '${branch}'...`)\n    await this.execAndLog(`git checkout ${branch}`)\n    this.log.info2(\"Pulling latest...\")\n    await this.execAndLog(\"git pull\")\n    this.log.info2(\"Updating version...\")\n    await ensureDir(\"scratch\")\n\n    const incrFlag =\n      options.version === \"patch\"\n        ? \"-i patch\"\n        : options.version === \"minor\"\n        ? \"-i minor\"\n        : \"-i major\"\n\n    await this.execAndLog(`npx stampver ${incrFlag} -u -s`)\n\n    let tagName = await readFile(\"scratch/version.tag.txt\")\n    let tagDescription = await readFile(\"scratch/version.desc.txt\")\n\n    if (branch !== \"master\") {\n      const suffix = \"-\" + branch\n\n      tagName += suffix\n      tagDescription += suffix\n    }\n\n    try {\n      if (options.clean) {\n        this.log.info2(\"Cleaning...\")\n        await this._clean(dirName)\n      }\n      await this._install(dirName)\n      await this._build(dirName)\n      await this._test(dirName)\n    } catch (error) {\n      // Roll back changes if anything went wrong\n      await this.execAndLog(`git checkout ${options.branch} .`)\n      return\n    }\n\n    this.log.info2(\"Staging version changes...\")\n    await this.execAndLog(\"git add :/\")\n    this.log.info(\"Committing version changes...\")\n    await this.execAndLog(`git commit -m '${tagDescription}'`)\n    this.log.info2(\"Tagging...\")\n    await this.execAndLog(`git tag -a '${tagName}' -m '${tagDescription}'`)\n    this.log.info2(\"Pushing to Git...\")\n    await this.execAndLog(\"git push --follow-tags\")\n\n    if (options.deploy) {\n      await this._deploy(dirName)\n    }\n\n    this.log.info(`Finished release of '${name}'.`)\n  }\n\n  async releaseAll(options) {\n    this.pkgInfo = await this.getPackageInfo()\n    this.ensureCommands([\"stampver\", \"git\", \"npx\", \"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this._release(dirName, options)\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [\n        \"help\",\n        \"version\",\n        \"clean\",\n        \"install\",\n        \"actors\",\n        \"debug\",\n        \"branch\",\n      ],\n      alias: {\n        a: \"actors\",\n      },\n    }\n    const args = parseArgs(argv, options)\n\n    this.debug = args.debug\n\n    if (args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    let command = \"help\"\n\n    if (args._.length > 0) {\n      command = args._[0].toLowerCase()\n      args._.shift()\n    }\n\n    switch (command) {\n      case \"start\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} start [options]\n\nDescription:\n\nRecursively runs 'npm start' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --actors, -a    If one or more 'actor:*' scripts are found in the package.json,\n                  run those instead of the 'start' script, if it exists.\n`)\n          return 0\n        }\n        await this.startAll({ preferActors: !!args.actors })\n        break\n\n      case \"clean\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} clean\n\nDescription:\n\nRecursively deletes all 'dist' and 'node_modules' directories, and 'package-lock.json' files.\n`)\n          return 0\n        }\n        await this.cleanAll()\n        break\n\n      case \"install\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} install\n\nDescription:\n\nRecursively runs 'npm install' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --clean         Runs a clean before installing\n  `)\n          return 0\n        }\n        await this.installAll({ clean: !!args.clean })\n        break\n\n      case \"build\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} build\n\nDescription:\n\nRecursively runs 'npm run build' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --install       Recursively runs 'npm install' before building\n  --clean         If '--install' is specified, does a '--clean' first\n`)\n          return 0\n        }\n        await this.buildAll({ clean: !!args.clean, install: !!args.install })\n        break\n\n      case \"test\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} test\n\nDescription:\n\nRecursively runs 'npm test' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        await this.testAll()\n        break\n\n      case \"deploy\":\n        if (args.help) {\n          this.log.info(`Usage: ${this.toolName} deploy\n\nDescription:\n\nRecursively runs 'npm run deploy' in all directories containing 'package.json' except 'node_modules/**'.\nWill colorize Ansible output if detected.\n`)\n          return 0\n        }\n        await this.deployAll()\n        break\n\n      case \"release\":\n        if (args.help) {\n          this.log.info(`Usage: ${\n            this.toolName\n          } release [major|minor|patch] [options]\n\nDescription:\n\nIncrement version information with 'stampver', runs 'easy build', 'easy test',\ntags local Git repo, pushes changes then optionally runs an npm deploy.\n\nOptions:\n  --deploy      Run a deployment after a success release\n  --branch      Will operate on a specific branch. Defaults to 'master'.\n  --clean       Clean before installing\n`)\n          return 0\n        }\n        await this.releaseAll({\n          version: args._[0],\n          deploy: !!args.deploy,\n          branch: args.branch,\n          clean: !!args.clean,\n        })\n        break\n\n      case \"help\":\n      default:\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nDescription:\n\nEasily install, build, test, release or deploy npm based packages.\n\nThe current directory should contain a package.json, which can be an empty file.\nWill recursively operate on all package.json files in a source tree.\n\nCommands:\n  start       Run 'npm start' in new terminal tabs.\n              Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm run build'\n  deploy      Run 'npm run deploy'\n  test        Run 'npm test'\n  install     Run 'npm install'\n  clean       Remove 'node_modules' and distribution files\n  release     Increment version, build, test, tag and release\n\nGlobal Options:\n  --help      Shows this help\n  --version   Shows the tool version\n  --debug     Enable debugging output\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"],"file":"EasyTool.js"}