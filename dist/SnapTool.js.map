{"version":3,"sources":["../src/SnapTool.js"],"names":["SnapTool","constructor","toolName","log","ensureCommands","cmds","Set","forEach","cmd","has","Error","add","getProject","filenames","ignore","realpath","dirNames","map","filename","dirname","pkgMap","Map","dirName","edges","rootPkg","pair","pkg","packageFilename","content","JSON","parse","encoding","error","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherdirName","resolve","join","substring","length","push","pkgs","order","array","reverse","startAll","project","tempFile","fileSync","name","rootDir","preferActors","args","actors","script","index","get","scripts","details","actorNames","getOwnPropertyNames","filter","s","endsWith","title","color","start","isLibrary","keywords","Array","isArray","includes","hasOwnProperty","basename","detail","testAll","test","info2","cleanAll","installAll","clean","updateAll","packages","pkgName","devDependencies","buildAll","install","build","deployAll","defaultUser","env","SNAP_DEPLOY_USER","defaultHost","SNAP_DEPLOY_HOST","user","question","gray","host","deploy","release","patch","minor","major","warning","incrFlag","tagName","tagDescription","npm","size","private","run","argv","options","boolean","alias","a","version","info","command","_","toLowerCase","help","slice"],"mappings":"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","file":"SnapTool.js","sourcesContent":["import { sync as globSync } from \"glob\"\nimport parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport util from \"util\"\nimport toposort from \"toposort\"\nimport {\n  readFileSync,\n  writeFileSync,\n  removeSync,\n  existsSync,\n  ensureDirSync,\n} from \"fs-extra\"\nimport path from \"path\"\nimport process from \"process\"\nimport { execSync } from \"child_process\"\nimport tmp from \"tmp\"\nimport { sync as commandExistsSync } from \"command-exists\"\nimport readlineSync from \"readline-sync\"\nimport chalk from \"chalk\"\n\nexport class SnapTool {\n  constructor(toolName, log) {\n    this.toolName = toolName\n    this.log = log\n  }\n\n  ensureCommands(cmds) {\n    this.cmds = this.cmds || new Set()\n\n    cmds.forEach((cmd) => {\n      if (!this.cmds.has(cmd) && !commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  getProject() {\n    if (!existsSync(\"package.json\")) {\n      throw new Error(\n        \"The current directory does not contain a package.json file\"\n      )\n    }\n\n    const filenames = globSync(\"**/package.json\", {\n      ignore: [\"**/node_modules/**\", \"**/scratch/**\"],\n      realpath: true,\n    })\n    const dirNames = filenames.map((filename) => path.dirname(filename))\n    const pkgMap = new Map(dirNames.map((dirName) => [dirName, {}]))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirName, pkg] = pair\n      const packageFilename = dirName + \"/package.json\"\n      let content = null\n\n      try {\n        content = JSON.parse(\n          readFileSync(packageFilename, { encoding: \"utf8\" })\n        )\n      } catch (error) {\n        this.log.error(`Reading ${packageFilename}`)\n        throw error\n      }\n\n      pkg.content = content\n\n      if (dirName === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = \"file:\"\n\n        Object.entries(content.dependencies).forEach((arr) => {\n          if (arr[1].startsWith(prefix)) {\n            const otherdirName = path.resolve(\n              path.join(dirName, arr[1].substring(prefix.length))\n            )\n\n            if (pkgMap.has(otherdirName)) {\n              edges.push([dirName, otherdirName])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirNames, edges).reverse(),\n      rootPkg,\n    }\n  }\n\n  startAll(project) {\n    this.ensureCommands([\"osascript\"])\n\n    const tempFile = tmp.fileSync().name\n    const rootDir = process.cwd()\n    const preferActors = !!this.args.actors\n\n    let script = `\n    tell application \"iTerm\"\n      tell (create window with default profile)\n    `\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n\n      if (!pkg.content.scripts) {\n        return\n      }\n\n      let details = []\n\n      if (preferActors) {\n        const actorNames = Object.getOwnPropertyNames(\n          pkg.content.scripts\n        ).filter((s) => s.startsWith(\"actor:\") && !s.endsWith(\":debug\"))\n\n        if (actorNames.length > 0) {\n          details = actorNames.map((name) => ({\n            name,\n            title: name.substring(\"actor:\".length),\n            color: \"255 198 0\",\n          }))\n        }\n      }\n\n      if (details.length === 0) {\n        if (!pkg.content.scripts.start) {\n          return\n        }\n\n        const isLibrary =\n          pkg.content.keywords &&\n          ((Array.isArray(pkg.content.keywords) &&\n            pkg.content.keywords.includes(\"library\")) ||\n            pkg.content.keywords.hasOwnProperty(\"library\"))\n\n        details = [\n          {\n            name: \"start\",\n            title: path.basename(dirName),\n            color: isLibrary ? \"0 255 0\" : \"0 198 255\",\n          },\n        ]\n      }\n\n      details.forEach((detail) => {\n        if (index == 0) {\n          script += `\n          tell current session of current tab\n          write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n          end tell\n          `\n        } else {\n          script += `\n          set newTab to (create tab with default profile)\n          tell newTab\n          tell current session of newTab\n          write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n          end tell\n          end tell\n          `\n        }\n      })\n    })\n    script += `\n      end tell\n    end tell\n    `\n\n    writeFileSync(tempFile, script)\n    execSync(`osascript < ${tempFile}`)\n  }\n\n  testAll(project) {\n    this.ensureCommands([\"npm\"])\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n\n      if (pkg.content.scripts && pkg.content.scripts.test) {\n        this.log.info2(`Testing '${path.basename(dirName)}'...`)\n        execSync(`npm test`, { cwd: dirName })\n      }\n    })\n  }\n\n  cleanAll(project) {\n    this.ensureCommands([\"npm\"])\n\n    project.order.forEach((dirName, index) => {\n      const name = path.basename(dirName)\n\n      this.log.info2(`Cleaning '${name}'...`)\n      removeSync(path.join(dirName, \"node_modules\"))\n      removeSync(path.join(dirName, \"package-lock.json\"))\n      removeSync(path.join(dirName, \"dist\"))\n      removeSync(path.join(dirName, \"build\"))\n    })\n  }\n\n  installAll(project) {\n    this.ensureCommands([\"npm\"])\n\n    if (this.args.clean) {\n      this.cleanAll(project)\n    }\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      this.log.info2(`Installing modules in '${name}'...`)\n      execSync(`npm install`, { cwd: dirName })\n    })\n  }\n\n  updateAll(project) {\n    this.ensureCommands([\"npm\"])\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      this.args.packages.forEach((pkgName) => {\n        if (\n          (pkg.content.dependencies && pkg.content.dependencies[pkgName]) ||\n          (pkg.content.devDependencies && pkg.content.devDependencies[pkgName])\n        ) {\n          this.log.info2(`Update '${pkgName}' in '${name}'...`)\n          execSync(`npm update ${pkgName}`, { cwd: dirName })\n        }\n      })\n    })\n  }\n\n  buildAll(project) {\n    this.ensureCommands([\"npm\"])\n\n    if (this.args.install) {\n      this.installAll(project)\n    }\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      if (pkg.content.scripts && pkg.content.scripts.build) {\n        this.log.info2(`Building '${name}'...`)\n        execSync(\"npm run build\", { cwd: dirName })\n      }\n    })\n  }\n\n  deployAll(project) {\n    this.ensureCommands([\"npm\"])\n\n    let defaultUser = process.env.SNAP_DEPLOY_USER || \"\"\n    let defaultHost = process.env.SNAP_DEPLOY_HOST || \"\"\n    let user =\n      readlineSync.question(\n        \"Deploy as user? \" + chalk.gray(`[${defaultUser}]`) + \" \"\n      ) || defaultUser\n    let host =\n      readlineSync.question(\n        \"Deploy to host? \" + chalk.gray(`[${defaultHost}]`) + \" \"\n      ) || defaultHost\n\n    if (!user || !host) {\n      this.log.error(\"Deployment user and host must be specified.\")\n    }\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      if (pkg.content.scripts && pkg.content.scripts.deploy) {\n        this.log.info2(`Deploying '${name}'...`)\n        execSync(\"npm run deploy\", {\n          cwd: dirName,\n          env: {\n            ...process.env,\n            SNAP_DEPLOY_USER: user,\n            SNAP_DEPLOY_HOST: host,\n          },\n        })\n      }\n    })\n  }\n\n  release(project) {\n    this.ensureCommands([\"stampver\", \"git\", \"npx\", \"npm\"])\n\n    if (!this.args.patch && !this.args.minor && !this.args.major) {\n      this.log.warning(\n        `Major, minor or patch number must be incremented for release`\n      )\n      return\n    }\n\n    this.log.info2(\"Checking for Uncommitted Changes...\")\n    try {\n      execSync(\"git diff-index --quiet HEAD --\")\n    } catch (error) {\n      throw new Error(\n        \"There are uncomitted changes - commit or stash them and try again\"\n      )\n    }\n\n    this.log.info2(\"Pulling...\")\n    execSync(\"git pull\")\n\n    this.log.info2(\"Updating Version...\")\n    ensureDirSync(\"scratch\")\n\n    const incrFlag = this.args.patch\n      ? \"-i patch\"\n      : this.args.minor\n        ? \"-i minor\"\n        : this.args.major\n          ? \"-i major\"\n          : \"\"\n\n    execSync(`npx stampver ${incrFlag} -u -s`)\n    const tagName = readFileSync(\"scratch/version.tag.txt\")\n    const tagDescription = readFileSync(\"scratch/version.desc.txt\")\n\n    try {\n      this.log.info2(\"Building...\")\n      this.buildAll(project)\n      this.log.info2(\"Testing...\")\n      this.testAll(project)\n\n      this.log.info2(\"Committing Version Changes...\")\n      execSync(\"git add :/\")\n\n      if (this.args.patch || this.args.minor || this.args.major) {\n        this.log.info2(\"Tagging...\")\n        execSync(`git tag -a ${tagName} -m '${tagDescription}'`)\n      }\n\n      execSync(`git commit -m '${tagDescription}'`)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      execSync(\"git checkout -- .\")\n      return\n    }\n\n    this.log.info2(\"Pushing to Git...\")\n    execSync(\"git push --follow-tags\")\n\n    if (\n      this.args.npm &&\n      project.pkgs.size >= 1 &&\n      !project.rootPkg.content.private\n    ) {\n      this.log.info2(\"Publishing to NPM...\")\n      execSync(\"npm publish\")\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [\n        \"help\",\n        \"version\",\n        \"patch\",\n        \"minor\",\n        \"major\",\n        \"clean\",\n        \"install\",\n        \"actors\",\n        \"npm\",\n      ],\n      alias: {\n        a: \"actors\",\n      },\n    }\n    this.args = parseArgs(argv, options)\n\n    if (this.args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    const project = this.getProject()\n    let command = this.args._[0]\n\n    command = command ? command.toLowerCase() : \"help\"\n\n    switch (command) {\n      case \"start\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} start [options]\n\nDescription:\n\nRecursively run 'npm start' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --actors, -a    If one or more 'actor:*' scripts are found in the package.json,\n                  run those instead of the 'start' script, if it exists.\n`)\n          return 0\n        }\n        this.startAll(project)\n        break\n\n      case \"build\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} build\n\nDescription:\n\nRecursively run 'npm run build' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --install       Recursively runs 'npm install' before building\n  --clean         If '--install' is specified, does a 'clean' first\n`)\n          return 0\n        }\n        this.buildAll(project)\n        break\n\n      case \"deploy\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} deploy\n\nDescription:\n\nRecursively run 'npm run deploy' in all directories containing 'package.json' except 'node_modules/**'.\nYou can set default values for the deployment user and host by setting the environment variables\nSNAP_DEPLOY_USER and SNAP_DEPLOY_HOST.\n`)\n          return 0\n        }\n        this.deployAll(project)\n        break\n\n      case \"test\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} test\n\nDescription:\n\nRecursively runs 'npm test' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.testAll(project)\n        break\n\n      case \"release\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} release [options]\n\nDescription:\n\nIncrement version information with 'stampver', runs 'snap build', 'snap test',\ntags local Git repo, pushes changes then optionally releases to NPM.\n\nOptions:\n  --major       Release major version\n  --minor       Release minor version\n  --patch       Release a patch\n  --npm         Push a non-private build to NPM (http://npmjs.org)\n`)\n          return 0\n        }\n        this.release(project)\n        break\n\n      case \"clean\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} clean\n\nDescription:\n\nRecursively deletes all 'dist' and 'node_modules' directories, and 'package-lock.json' files.\n`)\n          return 0\n        }\n        this.cleanAll(project)\n        break\n\n      case \"install\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} install\n\nDescription:\n\nRecursively run 'npm install' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.installAll(project)\n        break\n\n      case \"update\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} update\n\nDescription:\n\nRuns 'npm update' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.args.packages = this.args._.slice(1)\n        this.updateAll(project)\n        break\n\n      case \"help\":\n      default:\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nCommands:\n  start       Run 'npm start' for all projects in new terminal tabs.\n              Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm run build' for all projects\n  deploy      Run 'npm run deploy' for all projects\n  test        Run 'npm test' for all projects\n  update      Run 'npm update <pkg>...' for all projects\n  install     Run 'npm install' for all projects\n  clean       Remove 'node_modules' and distribution files for all packages\n  release     Increment version, build, test, tag and release\n\nGlobal Options:\n  --help                        Shows this help.\n  --version                     Shows the tool version.\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"]}