{"version":3,"sources":["../src/SnapTool.js"],"names":["SnapTool","constructor","log","ensureCommands","cmds","forEach","cmd","Error","getProject","filenames","ignore","realpath","dirnames","map","filename","dirname","pkgMap","Map","edges","rootPkg","pair","pkg","content","JSON","parse","encoding","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherDirname","resolve","join","substring","length","has","push","pkgs","order","array","reverse","startAll","project","tempFile","fileSync","name","rootDir","script","index","get","scripts","start","basename","color","keywords","includes","buildAll","build","args","clean","info","testAll","test","release","error","incrFlag","patch","minor","major","tagName","tagDescription","size","private","run","argv","options","boolean","command","_","version","help","toLowerCase"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AAEO,MAAMA,QAAN,CAAe;AACpBC,cAAYC,GAAZ,EAAiB;AACf,SAAKA,GAAL,GAAWA,GAAX;AACD;;AAED,SAAOC,cAAP,CAAsBC,IAAtB,EAA4B;AAC1BA,SAAKC,OAAL,CAAaC,OAAO;AAClB,UAAI,CAAC,yBAAkBA,GAAlB,CAAL,EAA6B;AAC3B,cAAM,IAAIC,KAAJ,CAAW,YAAWD,GAAI,uCAA1B,CAAN;AACD;AACF,KAJD;AAKD;;AAEDE,eAAa;AACX,QAAI,CAAC,yBAAW,cAAX,CAAL,EAAiC;AAC/B,YAAM,IAAID,KAAJ,CAAU,4DAAV,CAAN;AACD;;AAED,UAAME,YAAY,gBAAS,iBAAT,EAChB,EAAEC,QAAQ,CAAC,oBAAD,EAAuB,eAAvB,CAAV,EAAmDC,UAAU,IAA7D,EADgB,CAAlB;AAEA,UAAMC,WAAWH,UAAUI,GAAV,CAAcC,YAAa,eAAKC,OAAL,CAAaD,QAAb,CAA3B,CAAjB;AACA,UAAME,SAAS,IAAIC,GAAJ,CAAQL,SAASC,GAAT,CAAaE,WAAY,CAACA,OAAD,EAAU,EAAV,CAAzB,CAAR,CAAf;AACA,QAAIG,QAAQ,EAAZ;AACA,QAAIC,UAAU,IAAd;;AAEA,SAAK,IAAIC,IAAT,IAAiBJ,MAAjB,EAAyB;AACvB,YAAM,CAACD,OAAD,EAAUM,GAAV,IAAiBD,IAAvB;AACA,YAAME,UAAUC,KAAKC,KAAL,CAAW,2BAAaT,UAAU,eAAvB,EAAwC,EAAEU,UAAU,MAAZ,EAAxC,CAAX,CAAhB;;AAEAJ,UAAIC,OAAJ,GAAcA,OAAd;;AAEA,UAAIP,YAAY,kBAAQW,GAAR,EAAhB,EAA+B;AAC7BP,kBAAUE,GAAV;AACD,OAFD,MAEO,IAAIC,QAAQK,YAAZ,EAA0B;AAC/B,cAAMC,SAAS,OAAf;;AAEAC,eAAOC,OAAP,CAAeR,QAAQK,YAAvB,EAAqCtB,OAArC,CAA6C0B,OAAO;AAClD,cAAIA,IAAI,CAAJ,EAAOC,UAAP,CAAkBJ,MAAlB,CAAJ,EAA+B;AAC7B,kBAAMK,eAAe,eAAKC,OAAL,CAAa,eAAKC,IAAL,CAAUpB,OAAV,EAAmBgB,IAAI,CAAJ,EAAOK,SAAP,CAAiBR,OAAOS,MAAxB,CAAnB,CAAb,CAArB;;AAEA,gBAAIrB,OAAOsB,GAAP,CAAWL,YAAX,CAAJ,EAA8B;AAC5Bf,oBAAMqB,IAAN,CAAW,CAACxB,OAAD,EAAUkB,YAAV,CAAX;AACD;AACF;AACF,SARD;AASD;AACF;;AAED,WAAO;AACLO,YAAMxB,MADD;AAELyB,aAAO,mBAASC,KAAT,CAAe9B,QAAf,EAAyBM,KAAzB,EAAgCyB,OAAhC,EAFF;AAGLxB;AAHK,KAAP;AAKD;;AAEDyB,WAASC,OAAT,EAAkB;AAChB7C,aAASG,cAAT,CAAwB,CAAC,WAAD,CAAxB;;AAEA,UAAM2C,WAAW,cAAIC,QAAJ,GAAeC,IAAhC;AACA,UAAMC,UAAU,kBAAQvB,GAAR,EAAhB;;AAEA,QAAIwB,SAAU;;;KAAd;AAIAL,YAAQJ,KAAR,CAAcpC,OAAd,CAAsB,CAACU,OAAD,EAAUoC,KAAV,KAAoB;AACxC,YAAM9B,MAAMwB,QAAQL,IAAR,CAAaY,GAAb,CAAiBrC,OAAjB,CAAZ;;AAEA,UAAI,CAACM,IAAIC,OAAJ,CAAY+B,OAAb,IAAwB,CAAChC,IAAIC,OAAJ,CAAY+B,OAAZ,CAAoBC,KAAjD,EAAwD;AACtD;AACD;;AAED,YAAMN,OAAO,eAAKO,QAAL,CAAcxC,OAAd,CAAb;AACA,UAAIyC,KAAJ;AACA,UAAInC,IAAIC,OAAJ,CAAYmC,QAAZ,IAAwBpC,IAAIC,OAAJ,CAAYmC,QAAZ,CAAqBC,QAArB,CAA8B,SAA9B,CAA5B,EAAsE;AACpEF,gBAAQ,SAAR;AACD,OAFD,MAEO;AACLA,gBAAQ,WAAR;AACD;AACD,UAAIL,SAAS,CAAb,EAAgB;AACdD,kBAAW;;2BAEQnC,OAAQ,WAAUiC,IAAK,eAAcQ,KAAM;;SAF9D;AAKD,OAND,MAMO;AACLN,kBAAW;;;;6BAIUnC,OAAQ,WAAUiC,IAAK,eAAcQ,KAAM;;;SAJhE;AAQD;AACF,KA9BD;AA+BAN,cAAW;;;KAAX;;AAKA,gCAAcJ,QAAd,EAAwBI,MAAxB;AACA,iCAAU,eAAcJ,QAAS,EAAjC;AACD;;AAEDa,WAASd,OAAT,EAAkB;AAChB7C,aAASG,cAAT,CAAwB,CAAC,KAAD,CAAxB;AACA0C,YAAQJ,KAAR,CAAcpC,OAAd,CAAsB,CAACU,OAAD,EAAUoC,KAAV,KAAoB;AACxC,YAAM9B,MAAMwB,QAAQL,IAAR,CAAaY,GAAb,CAAiBrC,OAAjB,CAAZ;AACA,YAAMiC,OAAO,eAAKO,QAAL,CAAcxC,OAAd,CAAb;;AAEA,UAAIM,IAAIC,OAAJ,CAAY+B,OAAZ,IAAuBhC,IAAIC,OAAJ,CAAY+B,OAAZ,CAAoBO,KAA/C,EAAsD;AACpD,YAAI,KAAKC,IAAL,CAAUC,KAAd,EAAqB;AACjB,eAAK5D,GAAL,CAAS6D,IAAT,CAAe,aAAYf,IAAK,MAAhC;AACA,mCAAW,eAAKb,IAAL,CAAUpB,OAAV,EAAmB,cAAnB,CAAX;AACA,mCAAW,eAAKoB,IAAL,CAAUpB,OAAV,EAAmB,mBAAnB,CAAX;AACA,mCAAW,eAAKoB,IAAL,CAAUpB,OAAV,EAAmB,MAAnB,CAAX;AACA,eAAKb,GAAL,CAAS6D,IAAT,CAAc,wBAAd;AACA,uCAAS,aAAT,EAAwB,EAAErC,KAAKX,OAAP,EAAxB;AACH;;AAED,aAAKb,GAAL,CAAS6D,IAAT,CAAe,aAAYf,IAAK,MAAhC;AACA,qCAAS,eAAT,EAA0B,EAAEtB,KAAKX,OAAP,EAA1B;AACD;AACF,KAjBD;AAkBD;;AAEDiD,UAAQnB,OAAR,EAAiB;AACf7C,aAASG,cAAT,CAAwB,CAAC,KAAD,CAAxB;AACA0C,YAAQJ,KAAR,CAAcpC,OAAd,CAAsB,CAACU,OAAD,EAAUoC,KAAV,KAAoB;AACxC,YAAM9B,MAAMwB,QAAQL,IAAR,CAAaY,GAAb,CAAiBrC,OAAjB,CAAZ;;AAEA,UAAIM,IAAIC,OAAJ,IAAeD,IAAIC,OAAJ,CAAY+B,OAAZ,CAAoBY,IAAvC,EAA6C;AAC3C,aAAK/D,GAAL,CAAS6D,IAAT,CAAe,YAAW,eAAKR,QAAL,CAAcxC,OAAd,CAAuB,MAAjD;AACA,qCAAU,cAAV,EAAyB,EAAEW,KAAKX,OAAP,EAAzB;AACD;AACF,KAPD;AAQD;;AAEDmD,UAAQrB,OAAR,EAAiB;AACf7C,aAASG,cAAT,CAAwB,CAAC,UAAD,EAAa,KAAb,EAAoB,KAApB,EAA2B,KAA3B,CAAxB;AACA,SAAKD,GAAL,CAAS6D,IAAT,CAAc,qCAAd;AACA,QAAI;AACF,mCAAS,gCAAT;AACD,KAFD,CAEE,OAAOI,KAAP,EAAc;AACd,YAAM,IAAI5D,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAED,SAAKL,GAAL,CAAS6D,IAAT,CAAc,YAAd;AACA,iCAAS,UAAT;;AAEA,SAAK7D,GAAL,CAAS6D,IAAT,CAAc,qBAAd;AACA,gCAAc,SAAd;;AAEA,UAAMK,WAAW,KAAKP,IAAL,CAAUQ,KAAV,GAAkB,UAAlB,GAA+B,KAAKR,IAAL,CAAUS,KAAV,GAAkB,UAAlB,GAA+B,KAAKT,IAAL,CAAUU,KAAV,GAAkB,UAAlB,GAA+B,EAA9G;;AAEA,iCAAU,gBAAeH,QAAS,KAAlC;AACA,UAAMI,UAAU,2BAAa,yBAAb,CAAhB;AACA,UAAMC,iBAAiB,2BAAa,0BAAb,CAAvB;;AAEA,QAAI;AACF,WAAKvE,GAAL,CAAS6D,IAAT,CAAc,aAAd;AACA,WAAKJ,QAAL,CAAcd,OAAd;AACA,WAAK3C,GAAL,CAAS6D,IAAT,CAAc,YAAd;AACA,WAAKC,OAAL,CAAanB,OAAb;;AAEA,WAAK3C,GAAL,CAAS6D,IAAT,CAAc,+BAAd;AACA,mCAAS,YAAT;;AAEA,UAAI,KAAKF,IAAL,CAAUQ,KAAV,IAAmB,KAAKR,IAAL,CAAUS,KAA7B,IAAsC,KAAKT,IAAL,CAAUU,KAApD,EAA2D;AACzD,aAAKrE,GAAL,CAAS6D,IAAT,CAAc,YAAd;AACA,qCAAU,cAAaS,OAAQ,QAAOC,cAAe,GAArD;AACD;;AAED,mCAAU,kBAAiBA,cAAe,GAA1C;AACD,KAfD,CAeE,OAAON,KAAP,EAAc;AACd;AACA,mCAAS,mBAAT;AACA;AACD;;AAED,SAAKjE,GAAL,CAAS6D,IAAT,CAAc,YAAd;AACA,iCAAS,wBAAT;;AAEA,QAAIlB,QAAQL,IAAR,CAAakC,IAAb,KAAsB,CAAtB,IAA2B,CAAC7B,QAAQ1B,OAAR,CAAgBG,OAAhB,CAAwBqD,OAAxD,EAAiE;AAC/D,UAAI,CAAC,KAAKd,IAAL,CAAUQ,KAAX,IAAoB,CAAC,KAAKR,IAAL,CAAUS,KAA/B,IAAwC,CAAC,KAAKT,IAAL,CAAUU,KAAvD,EAA8D;AAC5D,aAAKrE,GAAL,CAASiE,KAAT,CAAgB,wEAAhB;AACA;AACD;AACD,WAAKjE,GAAL,CAAS6D,IAAT,CAAc,eAAd;AACA,mCAAS,aAAT;AACD;AACF;;AAED,QAAMa,GAAN,CAAUC,IAAV,EAAgB;AACd,UAAMC,UAAU;AACdC,eAAS,CAAE,MAAF,EAAU,SAAV,EAAqB,OAArB,EAA8B,OAA9B,EAAuC,OAAvC,EAAgD,OAAhD;AADK,KAAhB;AAGA,SAAKlB,IAAL,GAAY,wBAAUgB,IAAV,EAAgBC,OAAhB,CAAZ;;AAEA,UAAME,UAAU,KAAKnB,IAAL,CAAUoB,CAAV,CAAY,CAAZ,CAAhB;;AAEA,QAAI,KAAKpB,IAAL,CAAUqB,OAAd,EAAuB;AACrB,WAAKhF,GAAL,CAAS6D,IAAT,CAAe,GAAD,oBAAe,EAA7B;AACA,aAAO,CAAP;AACD;;AAED,QAAI,KAAKF,IAAL,CAAUsB,IAAV,IAAkB,CAACH,OAAvB,EAAgC;AAC9B,WAAK9E,GAAL,CAAS6D,IAAT,CAAe;;;;;;;;;;;;;;CAAf;AAeA,aAAO,CAAP;AACD;;AAED,UAAMlB,UAAU,KAAKrC,UAAL,EAAhB;;AAEA,YAAQwE,QAAQI,WAAR,EAAR;AACE,WAAK,OAAL;AACE,aAAKxC,QAAL,CAAcC,OAAd;AACA;AACF,WAAK,OAAL;AACE,aAAKc,QAAL,CAAcd,OAAd;AACA;AACF,WAAK,MAAL;AACE,aAAKmB,OAAL,CAAanB,OAAb;AACA;AACF,WAAK,SAAL;AACE,aAAKqB,OAAL,CAAarB,OAAb;AACA;AACF;AACE,aAAK3C,GAAL,CAASiE,KAAT,CAAe,sCAAf;AACA,eAAO,CAAC,CAAR;AAfJ;;AAkBA,WAAO,CAAP;AACD;AAvPmB;QAATnE,Q,GAAAA,Q","file":"SnapTool.js","sourcesContent":["import { sync as globSync } from 'glob'\nimport parseArgs from 'minimist'\nimport { fullVersion } from './version'\nimport util from 'util'\nimport toposort from 'toposort'\nimport { readFileSync, writeFileSync, removeSync, existsSync, ensureDirSync } from 'fs-extra'\nimport path from 'path'\nimport process from 'process'\nimport { execSync } from 'child_process'\nimport tmp from 'tmp'\nimport { sync as commandExistsSync } from 'command-exists'\n\nexport class SnapTool {\n  constructor(log) {\n    this.log = log\n  }\n\n  static ensureCommands(cmds) {\n    cmds.forEach(cmd => {\n      if (!commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      }\n    })\n  }\n\n  getProject() {\n    if (!existsSync('package.json')) {\n      throw new Error('The current directory does not contain a package.json file')\n    }\n\n    const filenames = globSync('**/package.json',\n      { ignore: ['**/node_modules/**', '**/scratch/**'], realpath: true })\n    const dirnames = filenames.map(filename => (path.dirname(filename)))\n    const pkgMap = new Map(dirnames.map(dirname => ([dirname, {}])))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirname, pkg] = pair\n      const content = JSON.parse(readFileSync(dirname + '/package.json', { encoding: 'utf8' }))\n\n      pkg.content = content\n\n      if (dirname === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = 'file:'\n\n        Object.entries(content.dependencies).forEach(arr => {\n          if (arr[1].startsWith(prefix)) {\n            const otherDirname = path.resolve(path.join(dirname, arr[1].substring(prefix.length)))\n\n            if (pkgMap.has(otherDirname)) {\n              edges.push([dirname, otherDirname])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirnames, edges).reverse(),\n      rootPkg\n    }\n  }\n\n  startAll(project) {\n    SnapTool.ensureCommands(['osascript'])\n\n    const tempFile = tmp.fileSync().name\n    const rootDir = process.cwd()\n\n    let script = `\n    tell application \"iTerm\"\n      tell (create window with default profile)\n    `\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n\n      if (!pkg.content.scripts || !pkg.content.scripts.start) {\n        return\n      }\n\n      const name = path.basename(dirname)\n      let color\n      if (pkg.content.keywords && pkg.content.keywords.includes('library')) {\n        color = '0 255 0'\n      } else {\n        color = '0 198 255'\n      }\n      if (index == 0) {\n        script += `\n        tell current session of current tab\n          write text \"cd ${dirname}; title ${name}; tab-color ${color}; npm start\"\n        end tell\n        `\n      } else {\n        script += `\n        set newTab to (create tab with default profile)\n        tell newTab\n          tell current session of newTab\n            write text \"cd ${dirname}; title ${name}; tab-color ${color}; npm start\"\n          end tell\n        end tell\n        `\n      }\n    })\n    script += `\n      end tell\n    end tell\n    `\n\n    writeFileSync(tempFile, script)\n    execSync(`osascript < ${tempFile}`)\n  }\n\n  buildAll(project) {\n    SnapTool.ensureCommands(['npm'])\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n      const name = path.basename(dirname)\n\n      if (pkg.content.scripts && pkg.content.scripts.build) {\n        if (this.args.clean) {\n            this.log.info(`Cleaning '${name}'...`)\n            removeSync(path.join(dirname, 'node_modules'))\n            removeSync(path.join(dirname, 'package-lock.json'))\n            removeSync(path.join(dirname, 'dist'))\n            this.log.info('Installing Packages...')\n            execSync('npm install', { cwd: dirname })\n        }\n\n        this.log.info(`Building '${name}'...`)\n        execSync('npm run build', { cwd: dirname})\n      }\n    })\n  }\n\n  testAll(project) {\n    SnapTool.ensureCommands(['npm'])\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n\n      if (pkg.content && pkg.content.scripts.test) {\n        this.log.info(`Testing '${path.basename(dirname)}'...`)\n        execSync(`npm run test`, { cwd: dirname})\n      }\n    })\n  }\n\n  release(project) {\n    SnapTool.ensureCommands(['stampver', 'git', 'npx', 'npm'])\n    this.log.info('Checking for Uncommitted Changes...')\n    try {\n      execSync('git diff-index --quiet HEAD --')\n    } catch (error) {\n      throw new Error('There are uncomitted changes - commit or stash them and try again')\n    }\n\n    this.log.info('Pulling...')\n    execSync('git pull')\n\n    this.log.info('Updating Version...')\n    ensureDirSync('scratch')\n\n    const incrFlag = this.args.patch ? '-i patch' : this.args.minor ? '-i minor' : this.args.major ? '-i major' : ''\n\n    execSync(`npx stampver ${incrFlag} -u`)\n    const tagName = readFileSync('scratch/version.tag.txt')\n    const tagDescription = readFileSync('scratch/version.desc.txt')\n\n    try {\n      this.log.info('Building...')\n      this.buildAll(project)\n      this.log.info('Testing...')\n      this.testAll(project)\n\n      this.log.info('Committing Version Changes...')\n      execSync('git add :/')\n\n      if (this.args.patch || this.args.minor || this.args.major) {\n        this.log.info('Tagging...')\n        execSync(`git tag -a ${tagName} -m '${tagDescription}'`)\n      }\n\n      execSync(`git commit -m '${tagDescription}'`)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      execSync('git checkout -- .')\n      return\n    }\n\n    this.log.info('Pushing...')\n    execSync('git push --follow-tags')\n\n    if (project.pkgs.size === 1 && !project.rootPkg.content.private) {\n      if (!this.args.patch && !this.args.minor && !this.args.major) {\n        this.log.error(`Not pushing to NPM as major, minor or patch number must be incremented`)\n        return\n      }\n      this.log.info('Publishing...')\n      execSync('npm publish')\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [ 'help', 'version', 'patch', 'minor', 'major', 'clean' ],\n    }\n    this.args = parseArgs(argv, options)\n\n    const command = this.args._[0]\n\n    if (this.args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    if (this.args.help || !command) {\n      this.log.info(`\nusage: snap <cmd> [options]\n\ncommands:\n  start            Run 'npm start' for all projects\n  build            Run 'npm build' for all projects\n  test             Run 'npm test' for all projects\n  release          Increment version, run build' and 'test', tag and release non-private to 'npm'\n\noptions:\n  --patch | --minor | --major   Release a patch, minor or major version. For 'release' command only.\n  --clean                       Do a clean build.  For 'build' command only.\n  --help                        Shows this help.\n  --version                     Shows the tool version.\n`)\n      return 0\n    }\n\n    const project = this.getProject()\n\n    switch (command.toLowerCase()) {\n      case 'start':\n        this.startAll(project)\n        break\n      case 'build':\n        this.buildAll(project)\n        break\n      case 'test':\n        this.testAll(project)\n        break\n      case 'release':\n        this.release(project)\n        break\n      default:\n        this.log.error('Use --help to see available commands')\n        return -1\n    }\n\n    return 0\n  }\n}\n"]}