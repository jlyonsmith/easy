{"version":3,"sources":["../src/SnapTool.js"],"names":["SnapTool","constructor","toolName","log","ensureCommands","cmds","Set","forEach","cmd","has","Error","add","getPackageInfo","filenames","ignore","realpath","dirNames","map","filename","path","dirname","pkgMap","Map","dirName","edges","rootPkg","pair","pkg","packageFilename","content","JSON","parse","encoding","error","process","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherdirName","resolve","join","substring","length","push","pkgs","order","toposort","array","reverse","execWithOutput","command","options","Promise","reject","cp","re","RegExp","stdout","on","data","s","toString","replace","args","ansible","ansibleOK","ansibleChanged","ansibleSkipping","ansibleError","info","stderr","code","startAll","tmpObjMain","tmp","fileSync","tmpObjHelper","preferActors","actors","name","script","firstTab","pkgInfo","get","scripts","tabDetails","actorNames","getOwnPropertyNames","filter","endsWith","title","color","start","isLibrary","keywords","Array","isArray","includes","hasOwnProperty","basename","detail","debug","shell","test","info2","testAll","clean","cleanAll","install","installAll","update","pkgName","packages","devDependencies","updateAll","build","buildAll","deploy","deployAll","release","incrFlag","patch","minor","major","tagName","tagDescription","npm","size","private","releaseAll","warning","run","argv","boolean","alias","a","version","fullVersion","_","toLowerCase","help","slice"],"mappings":"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","file":"SnapTool.js","sourcesContent":["import { sync as globSync } from \"glob\"\nimport parseArgs from \"minimist\"\nimport { fullVersion } from \"./version\"\nimport toposort from \"toposort\"\nimport { readFile, writeFile, remove, exists, ensureDir } from \"fs-extra\"\nimport path from \"path\"\nimport process from \"process\"\nimport { exec } from \"child_process\"\nimport tmp from \"tmp\"\nimport { sync as commandExistsSync } from \"command-exists\"\n\nexport class SnapTool {\n  constructor(toolName, log) {\n    this.toolName = toolName\n    this.log = log\n  }\n\n  ensureCommands(cmds) {\n    this.cmds = this.cmds || new Set()\n\n    cmds.forEach((cmd) => {\n      if (!this.cmds.has(cmd) && !commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  async getPackageInfo() {\n    if (!(await exists(\"package.json\"))) {\n      throw new Error(\n        \"The current directory does not contain a package.json file\"\n      )\n    }\n\n    const filenames = globSync(\"**/package.json\", {\n      ignore: [\"**/node_modules/**\", \"**/scratch/**\"],\n      realpath: true,\n    })\n    const dirNames = filenames.map((filename) => path.dirname(filename))\n    const pkgMap = new Map(dirNames.map((dirName) => [dirName, {}]))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirName, pkg] = pair\n      const packageFilename = dirName + \"/package.json\"\n      let content = null\n\n      try {\n        content = JSON.parse(\n          await readFile(packageFilename, { encoding: \"utf8\" })\n        )\n      } catch (error) {\n        this.log.error(`Reading ${packageFilename}`)\n        throw error\n      }\n\n      pkg.content = content\n\n      if (dirName === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = \"file:\"\n\n        Object.entries(content.dependencies).forEach((arr) => {\n          if (arr[1].startsWith(prefix)) {\n            const otherdirName = path.resolve(\n              path.join(dirName, arr[1].substring(prefix.length))\n            )\n\n            if (pkgMap.has(otherdirName)) {\n              edges.push([dirName, otherdirName])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirNames, edges).reverse(),\n      rootPkg,\n    }\n  }\n\n  execWithOutput(command, options) {\n    return new Promise((resolve, reject) => {\n      const cp = exec(command, options)\n      const re = new RegExp(/\\n$/)\n\n      cp.stdout.on(\"data\", (data) => {\n        const s = data.toString().replace(re, \"\")\n\n        if (this.args.ansible) {\n          if (s.startsWith(\"ok: \")) {\n            this.log.ansibleOK(s)\n          } else if (s.startsWith(\"changed: \")) {\n            this.log.ansibleChanged(s)\n          } else if (s.startsWith(\"skipping: \")) {\n            this.log.ansibleSkipping(s)\n          } else if (s.startsWith(\"error: \")) {\n            this.log.ansibleError(s)\n          } else {\n            this.log.info(s)\n          }\n        } else {\n          this.log.info(s)\n        }\n      })\n\n      cp.stderr.on(\"data\", (data) => {\n        const s = data.toString().replace(re, \"\")\n\n        if (s !== \"npm\" && s !== \"notice\" && s !== \"npm notice\") {\n          this.log.info(s)\n        }\n      })\n\n      cp.on(\"error\", () => {\n        reject()\n      })\n\n      cp.on(\"exit\", function(code) {\n        if (code !== 0) {\n          reject()\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  async startAll() {\n    this.ensureCommands([\"osascript\"])\n\n    const tmpObjMain = tmp.fileSync()\n    const tmpObjHelper = tmp.fileSync()\n    const preferActors = !!this.args.actors\n\n    await writeFile(\n      tmpObjHelper.name,\n      `# function for setting iTerm2 titles\nfunction title {\n  printf \"\\\\x1b]0;%s\\\\x7\" \"$1\"\n}\n\n# function for setting iTerm2 tab colors\nfunction tab-color {\n  printf \"\\\\x1b]6;1;bg;red;brightness;%s\\\\x7\" \"$1\"\n  printf \"\\\\x1b]6;1;bg;green;brightness;%s\\\\x7\" \"$2\"\n  printf \"\\\\x1b]6;1;bg;blue;brightness;%s\\\\x7\" \"$3\"\n}\n`\n    )\n\n    let script = `\ntell application \"iTerm\"\n  tell (create window with default profile)\n    `\n    let firstTab = true\n\n    // Loop through package.json dirs\n    for (const dirName of this.pkgInfo.order) {\n      const pkg = this.pkgInfo.pkgs.get(dirName)\n\n      if (!pkg.content.scripts) {\n        continue\n      }\n\n      let tabDetails = []\n\n      if (preferActors) {\n        const actorNames = Object.getOwnPropertyNames(\n          pkg.content.scripts\n        ).filter((s) => s.startsWith(\"actor:\") && !s.endsWith(\":debug\"))\n\n        if (actorNames.length > 0) {\n          tabDetails = actorNames.map((name) => ({\n            name,\n            title: name.substring(\"actor:\".length),\n            color: \"255 198 0\",\n          }))\n        }\n      }\n\n      if (tabDetails.length === 0) {\n        if (!pkg.content.scripts.start) {\n          continue\n        }\n\n        const isLibrary =\n          pkg.content.keywords &&\n          ((Array.isArray(pkg.content.keywords) &&\n            pkg.content.keywords.includes(\"library\")) ||\n            pkg.content.keywords.hasOwnProperty(\"library\"))\n\n        tabDetails = [\n          {\n            name: \"start\",\n            title: path.basename(dirName),\n            color: isLibrary ? \"0 255 0\" : \"0 198 255\",\n          },\n        ]\n      }\n\n      tabDetails.forEach((detail) => {\n        if (firstTab) {\n          script += `\n    tell current session of current tab\n      write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n    end tell\n`\n          firstTab = false\n        } else {\n          script += `\n    set newTab to (create tab with default profile)\n    tell newTab\n      tell current session of newTab\n        write text \"cd ${dirName}; title ${detail.title}; tab-color ${\n            detail.color\n          }; npm run ${detail.name}\"\n      end tell\n    end tell\n`\n        }\n      })\n    }\n    script += `\n  end tell\nend tell\n`\n\n    await writeFile(tmpObjMain.name, script)\n\n    if (this.args.debug) {\n      this.log.info(script)\n    }\n\n    await this.execWithOutput(\n      `source ${tmpObjHelper.name}; osascript < ${tmpObjMain.name}`,\n      {\n        shell: \"/bin/bash\",\n      }\n    )\n  }\n\n  async test(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n\n    if (pkg.content.scripts && pkg.content.scripts.test) {\n      this.log.info2(`Testing '${path.basename(dirName)}'...`)\n      await this.execWithOutput(`npm test`, { cwd: dirName })\n    }\n  }\n\n  async testAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.test(dirName)\n    }\n  }\n\n  async clean(dirName) {\n    const name = path.basename(dirName)\n\n    this.log.info2(`Cleaning '${name}'...`)\n    await remove(path.join(dirName, \"node_modules\"))\n    await remove(path.join(dirName, \"package-lock.json\"))\n    await remove(path.join(dirName, \"dist\"))\n    await remove(path.join(dirName, \"build\"))\n  }\n\n  async cleanAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.clean(dirName)\n    }\n  }\n\n  async install(dirName) {\n    const name = path.basename(dirName)\n\n    if (this.args.clean) {\n      await this.clean(dirName)\n    }\n\n    this.log.info2(`Installing modules in '${name}'...`)\n    await this.execWithOutput(`npm install`, { cwd: dirName })\n  }\n\n  async installAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.install(dirName)\n    }\n  }\n\n  async update(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n    const name = path.basename(dirName)\n\n    for (const pkgName of this.args.packages) {\n      if (\n        (pkg.content.dependencies && pkg.content.dependencies[pkgName]) ||\n        (pkg.content.devDependencies && pkg.content.devDependencies[pkgName])\n      ) {\n        this.log.info2(`Update '${pkgName}' in '${name}'...`)\n        await this.execWithOutput(`npm update ${pkgName}`, { cwd: dirName })\n      }\n    }\n  }\n\n  async updateAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.update(dirName)\n    }\n  }\n\n  async build(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n    const name = path.basename(dirName)\n\n    if (this.args.install) {\n      await this.install(dirName)\n    }\n\n    if (pkg.content.scripts && pkg.content.scripts.build) {\n      this.log.info2(`Building '${name}'...`)\n      await this.execWithOutput(\"npm run build\", { cwd: dirName })\n    }\n  }\n\n  async buildAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.build(dirName)\n    }\n  }\n\n  async deploy(dirName) {\n    const pkg = this.pkgInfo.pkgs.get(dirName)\n    const name = path.basename(dirName)\n\n    if (pkg.content.scripts && pkg.content.scripts.deploy) {\n      this.log.info2(`Deploying '${name}'...`)\n      await this.execWithOutput(\"npm run deploy\", {\n        cwd: dirName,\n      })\n    }\n  }\n\n  async deployAll() {\n    this.ensureCommands([\"npm\"])\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.deploy(dirName)\n    }\n  }\n\n  async release(dirName) {\n    const name = path.basename(dirName)\n\n    this.log.info2(`Releasing '${name}'...`)\n    this.log.info2(\"Checking for Uncommitted Changes...\")\n    try {\n      await this.execWithOutput(\"git diff-index --quiet HEAD --\")\n    } catch (error) {\n      throw new Error(\n        \"There are uncomitted changes - commit or stash them and try again\"\n      )\n    }\n\n    this.log.info2(\"Pulling...\")\n    await this.execWithOutput(\"git pull\")\n\n    this.log.info2(\"Updating Version...\")\n    await ensureDir(\"scratch\")\n\n    const incrFlag = this.args.patch\n      ? \"-i patch\"\n      : this.args.minor\n        ? \"-i minor\"\n        : this.args.major\n          ? \"-i major\"\n          : \"\"\n\n    await this.execWithOutput(`npx stampver ${incrFlag} -u -s`)\n\n    const tagName = await readFile(\"scratch/version.tag.txt\")\n    const tagDescription = await readFile(\"scratch/version.desc.txt\")\n\n    try {\n      this.log.info2(\"Installing...\")\n      await this.install(dirName)\n      this.log.info2(\"Building...\")\n      await this.build(dirName)\n      this.log.info2(\"Testing...\")\n      await this.test(dirName)\n\n      this.log.info2(\"Committing Version Changes...\")\n      await this.execWithOutput(\"git add :/\")\n\n      if (this.args.patch || this.args.minor || this.args.major) {\n        this.log.info2(\"Tagging...\")\n        await this.execWithOutput(\n          `git tag -a ${tagName} -m '${tagDescription}'`\n        )\n      }\n\n      await this.execWithOutput(`git commit -m '${tagDescription}'`)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      await this.execWithOutput(\"git checkout -- .\")\n      return\n    }\n\n    this.log.info2(\"Pushing to Git...\")\n    await this.execWithOutput(\"git push --follow-tags\")\n\n    if (\n      this.args.npm &&\n      this.pkgInfo.pkgs.size >= 1 &&\n      !this.pkgInfo.rootPkg.content.private\n    ) {\n      this.log.info2(\"Publishing to NPM...\")\n      await this.execWithOutput(\"npm publish\")\n    } else if (!this.args.npm && this.args.deploy) {\n      await this.deploy(dirName)\n    }\n  }\n\n  async releaseAll() {\n    this.ensureCommands([\"stampver\", \"git\", \"npx\", \"npm\"])\n\n    if (!this.args.patch && !this.args.minor && !this.args.major) {\n      this.log.warning(\n        `Major, minor or patch number must be incremented for release`\n      )\n      return\n    }\n\n    for (const dirName of this.pkgInfo.order) {\n      await this.release(dirName)\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [\n        \"help\",\n        \"version\",\n        \"patch\",\n        \"minor\",\n        \"major\",\n        \"clean\",\n        \"install\",\n        \"actors\",\n        \"npm\",\n        \"debug\",\n        \"ansible\",\n      ],\n      alias: {\n        a: \"actors\",\n      },\n    }\n    this.args = parseArgs(argv, options)\n\n    if (this.args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    this.pkgInfo = await this.getPackageInfo()\n\n    let command = this.args._[0]\n\n    command = command ? command.toLowerCase() : \"help\"\n\n    switch (command) {\n      case \"start\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} start [options]\n\nDescription:\n\nRecursively runs 'npm start' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --actors, -a    If one or more 'actor:*' scripts are found in the package.json,\n                  run those instead of the 'start' script, if it exists.\n`)\n          return 0\n        }\n        await this.startAll()\n        break\n\n      case \"build\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} build\n\nDescription:\n\nRecursively runs 'npm run build' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --install       Recursively runs 'npm install' before building\n  --clean         If '--install' is specified, does a '--clean' first\n`)\n          return 0\n        }\n        await this.buildAll()\n        break\n\n      case \"deploy\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} deploy\n\nDescription:\n\nRecursively runs 'npm run deploy' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        await this.deployAll()\n        break\n\n      case \"test\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} test\n\nDescription:\n\nRecursively runs 'npm test' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        await this.testAll()\n        break\n\n      case \"release\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} release [options]\n\nDescription:\n\nIncrement version information with 'stampver', runs 'snap build', 'snap test',\ntags local Git repo, pushes changes then optionally releases to NPM.\n\nOptions:\n  --major       Release major version\n  --minor       Release minor version\n  --patch       Release a patch\n  --npm         Push a non-private build to NPM (http://npmjs.org)\n  --deploy      Run a deployment after a success release. Cannot be used with --npm.\n`)\n          return 0\n        }\n        await this.releaseAll()\n        break\n\n      case \"clean\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} clean\n\nDescription:\n\nRecursively deletes all 'dist' and 'node_modules' directories, and 'package-lock.json' files.\n`)\n          return 0\n        }\n        await this.cleanAll()\n        break\n\n      case \"install\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} install\n\nDescription:\n\nRecursively runs 'npm install' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        await this.installAll()\n        break\n\n      case \"update\":\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} update\n\nDescription:\n\nRecursively runs 'npm update <pkg>,...' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.args.packages = this.args._.slice(1)\n        await this.updateAll()\n        break\n\n      case \"help\":\n      default:\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nDescription:\n\nCurrent directory must contain a package.json, which can be a dummy file.\nOperates on all sub-directories containing a package.json excluding\nnode_modules directories.\n\nCommands:\n  start       Run 'npm start' in new terminal tabs.\n              Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm run build'\n  deploy      Run 'npm run deploy'\n  test        Run 'npm test'\n  update      Run 'npm update'\n  install     Run 'npm install'\n  clean       Remove 'node_modules' and distribution files\n  release     Increment version, build, test, tag and release\n\nGlobal Options:\n  --help      Shows this help\n  --version   Shows the tool version\n  --debug     Enable debugging output\n  --ansible   Colorize Ansible output if detected\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"]}