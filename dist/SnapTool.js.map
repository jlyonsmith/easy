{"version":3,"sources":["../src/SnapTool.js"],"names":["SnapTool","constructor","toolName","log","ensureCommands","cmds","Set","forEach","cmd","has","Error","add","getProject","filenames","ignore","realpath","dirNames","map","filename","dirname","pkgMap","Map","dirName","edges","rootPkg","pair","pkg","content","JSON","parse","encoding","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherdirName","resolve","join","substring","length","push","pkgs","order","array","reverse","startAll","project","tempFile","fileSync","name","rootDir","preferActors","args","actors","script","index","get","scripts","details","actorNames","getOwnPropertyNames","filter","s","endsWith","title","color","start","isLibrary","keywords","Array","isArray","includes","hasOwnProperty","basename","detail","testAll","test","info2","installAll","clean","cleanAll","updateAll","packages","pkgName","devDependencies","buildAll","build","release","patch","minor","major","warning","error","incrFlag","tagName","tagDescription","npm","size","private","run","argv","options","boolean","alias","version","info","command","_","toLowerCase","help","slice"],"mappings":"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","file":"SnapTool.js","sourcesContent":["import { sync as globSync } from 'glob'\nimport parseArgs from 'minimist'\nimport { fullVersion } from './version'\nimport util from 'util'\nimport toposort from 'toposort'\nimport { readFileSync, writeFileSync, removeSync, existsSync, ensureDirSync } from 'fs-extra'\nimport path from 'path'\nimport process from 'process'\nimport { execSync } from 'child_process'\nimport tmp from 'tmp'\nimport { sync as commandExistsSync } from 'command-exists'\n\nexport class SnapTool {\n  constructor(toolName, log) {\n    this.toolName = toolName\n    this.log = log\n  }\n\n  ensureCommands(cmds) {\n    this.cmds = (this.cmds || new Set())\n\n    cmds.forEach(cmd => {\n      if (!this.cmds.has(cmd) &&!commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  getProject() {\n    if (!existsSync('package.json')) {\n      throw new Error('The current directory does not contain a package.json file')\n    }\n\n    const filenames = globSync('**/package.json',\n      { ignore: ['**/node_modules/**', '**/scratch/**'], realpath: true })\n    const dirNames = filenames.map(filename => (path.dirname(filename)))\n    const pkgMap = new Map(dirNames.map(dirName => ([dirName, {}])))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirName, pkg] = pair\n      const content = JSON.parse(readFileSync(dirName + '/package.json', { encoding: 'utf8' }))\n\n      pkg.content = content\n\n      if (dirName === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = 'file:'\n\n        Object.entries(content.dependencies).forEach(arr => {\n          if (arr[1].startsWith(prefix)) {\n            const otherdirName = path.resolve(path.join(dirName, arr[1].substring(prefix.length)))\n\n            if (pkgMap.has(otherdirName)) {\n              edges.push([dirName, otherdirName])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirNames, edges).reverse(),\n      rootPkg\n    }\n  }\n\n  startAll(project) {\n    this.ensureCommands(['osascript'])\n\n    const tempFile = tmp.fileSync().name\n    const rootDir = process.cwd()\n    const preferActors = !!this.args.actors\n\n    let script = `\n    tell application \"iTerm\"\n      tell (create window with default profile)\n    `\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n\n      if (!pkg.content.scripts) {\n        return\n      }\n\n      let details = []\n\n      if (preferActors) {\n        const actorNames = Object.getOwnPropertyNames(pkg.content.scripts).filter(s => s.startsWith('actor:') && !s.endsWith(':debug'))\n\n        if (actorNames.length > 0) {\n          details = actorNames.map((name) => ({ name, title: name.substring('actor:'.length), color: '255 198 0' }))\n        }\n      }\n\n      if (details.length === 0) {\n        if (!pkg.content.scripts.start) {\n          return\n        }\n\n        const isLibrary = (pkg.content.keywords &&\n          ((Array.isArray(pkg.content.keywords) && pkg.content.keywords.includes('library')) || pkg.content.keywords.hasOwnProperty('library')))\n\n        details = [{ name: 'start', title: path.basename(dirName), color: isLibrary ? '0 255 0' : '0 198 255' }]\n      }\n\n      details.forEach((detail) => {\n        if (index == 0) {\n          script += `\n          tell current session of current tab\n          write text \"cd ${dirName}; title ${detail.title}; tab-color ${detail.color}; npm run ${detail.name}\"\n          end tell\n          `\n        } else {\n          script += `\n          set newTab to (create tab with default profile)\n          tell newTab\n          tell current session of newTab\n          write text \"cd ${dirName}; title ${detail.title}; tab-color ${detail.color}; npm run ${detail.name}\"\n          end tell\n          end tell\n          `\n        }\n      })\n    })\n    script += `\n      end tell\n    end tell\n    `\n\n    writeFileSync(tempFile, script)\n    execSync(`osascript < ${tempFile}`)\n  }\n\n  testAll(project) {\n    this.ensureCommands(['npm'])\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n\n      if (pkg.content.scripts && pkg.content.scripts.test) {\n        this.log.info2(`Testing '${path.basename(dirName)}'...`)\n        execSync(`npm test`, { cwd: dirName})\n      }\n    })\n  }\n\n  installAll(project) {\n    this.ensureCommands(['npm'])\n\n    if (this.args.clean) {\n      this.cleanAll(project)\n    }\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      this.log.info2(`Installing '${name}'...`)\n      execSync(`npm install`, { cwd: dirName})\n    })\n  }\n\n  cleanAll(project) {\n    this.ensureCommands(['npm'])\n\n    project.order.forEach((dirName, index) => {\n      const name = path.basename(dirName)\n\n      this.log.info2(`Cleaning '${name}'...`)\n      removeSync(path.join(dirName, 'node_modules'))\n      removeSync(path.join(dirName, 'package-lock.json'))\n      removeSync(path.join(dirName, 'dist'))\n    })\n  }\n\n  updateAll(project) {\n    this.ensureCommands(['npm'])\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      this.args.packages.forEach((pkgName) => {\n        if ((pkg.content.dependencies && pkg.content.dependencies[pkgName]) ||\n          (pkg.content.devDependencies && pkg.content.devDependencies[pkgName])) {\n          this.log.info2(`Update '${pkgName}' in '${name}'...`)\n          execSync(`npm update ${pkgName}`, { cwd: dirName})\n        }\n      })\n    })\n  }\n\n  buildAll(project) {\n    this.ensureCommands(['npm'])\n\n    if (this.args.clean) {\n      this.installAll(project)\n    }\n\n    project.order.forEach((dirName, index) => {\n      const pkg = project.pkgs.get(dirName)\n      const name = path.basename(dirName)\n\n      if (pkg.content.scripts && pkg.content.scripts.build) {\n        this.log.info2(`Building '${name}'...`)\n        execSync('npm run build', { cwd: dirName})\n      }\n    })\n  }\n\n  release(project) {\n    this.ensureCommands(['stampver', 'git', 'npx', 'npm'])\n\n    if (!this.args.patch && !this.args.minor && !this.args.major) {\n      this.log.warning(`Major, minor or patch number must be incremented for release`)\n      return\n    }\n\n    this.log.info2('Checking for Uncommitted Changes...')\n    try {\n      execSync('git diff-index --quiet HEAD --')\n    } catch (error) {\n      throw new Error('There are uncomitted changes - commit or stash them and try again')\n    }\n\n    this.log.info2('Pulling...')\n    execSync('git pull')\n\n    this.log.info2('Updating Version...')\n    ensureDirSync('scratch')\n\n    const incrFlag = this.args.patch ? '-i patch' : this.args.minor ? '-i minor' : this.args.major ? '-i major' : ''\n\n    execSync(`npx stampver ${incrFlag} -u`)\n    const tagName = readFileSync('scratch/version.tag.txt')\n    const tagDescription = readFileSync('scratch/version.desc.txt')\n\n    try {\n      this.log.info2('Building...')\n      this.buildAll(project)\n      this.log.info2('Testing...')\n      this.testAll(project)\n\n      this.log.info2('Committing Version Changes...')\n      execSync('git add :/')\n\n      if (this.args.patch || this.args.minor || this.args.major) {\n        this.log.info2('Tagging...')\n        execSync(`git tag -a ${tagName} -m '${tagDescription}'`)\n      }\n\n      execSync(`git commit -m '${tagDescription}'`)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      execSync('git checkout -- .')\n      return\n    }\n\n    this.log.info2('Pushing to Git...')\n    execSync('git push --follow-tags')\n\n    if (this.args.npm && project.pkgs.size >= 1 && !project.rootPkg.content.private) {\n      this.log.info2('Publishing to NPM...')\n      execSync('npm publish')\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [ 'help', 'version', 'patch', 'minor', 'major', 'clean', 'actors', 'npm' ],\n      alias: {\n        'a': 'actors'\n      }\n    }\n    this.args = parseArgs(argv, options)\n\n    if (this.args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    const project = this.getProject()\n    let command = this.args._[0]\n\n    command = command ? command.toLowerCase() : 'help'\n\n    switch (command) {\n      case 'start':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} start [options]\n\nDescription:\n\nRuns 'npm start' in all directories containing 'package.json' except 'node_modules/**'.\n\nOptions:\n  --actors, -a    If one or more 'actor:*' scripts are found in the package.json,\n                  run those instead of the 'start' script, if it exists.\n`)\n          return 0\n        }\n        this.startAll(project)\n        break\n      case 'build':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} build\n\nDescription:\n\nRuns 'npm run build' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.buildAll(project)\n        break\n      case 'test':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} test\n\nDescription:\n\nRuns 'npm test' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.testAll(project)\n        break\n      case 'release':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} release [options]\n\nDescription:\n\nIncrement version information with 'stampver', runs 'snap build', 'snap test',\ntags local Git repo, pushes changes then optionally releases to NPM.\n\nOptions:\n  --major       Release major version\n  --minor       Release minor version\n  --patch       Release a patch\n  --npm         Push a non-private build to NPM (http://npmjs.org)\n`)\n          return 0\n        }\n        this.release(project)\n        break\n      case 'clean':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} clean\n\nDescription:\n\nDeletes all 'dist' and 'node_modules' directories, and 'package-lock.json' files recursively.\n`)\n          return 0\n        }\n        this.cleanAll(project)\n        break\n      case 'install':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} install\n\nDescription:\n\nRuns 'npm install' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.installAll(project)\n        break\n      case 'update':\n        if (this.args.help) {\n          this.log.info(`Usage: ${this.toolName} update\n\nDescription:\n\nRuns 'npm update' in all directories containing 'package.json' except 'node_modules/**'.\n`)\n          return 0\n        }\n        this.args.packages = this.args._.slice(1)\n        this.updateAll(project)\n        break\n      case 'help':\n      default:\n        this.log.info(`\nUsage: ${this.toolName} <cmd> [options]\n\nCommands:\n  start       Run 'npm start' for all projects in new terminal tabs.\n              Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm build' for all projects\n  test        Run 'npm test' for all projects\n  update      Run 'npm update <pkg>...' for all projects\n  install     Run 'npm install' for all projects\n  clean       Remove 'node_modules' and distribution files for all packages\n  release     Increment version, build, test, tag and release\n\nGlobal Options:\n  --help                        Shows this help.\n  --version                     Shows the tool version.\n`)\n        return 0\n    }\n\n    return 0\n  }\n}\n"]}