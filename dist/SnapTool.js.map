{"version":3,"sources":["../src/SnapTool.js"],"names":["SnapTool","constructor","log","ensureCommands","cmds","Set","forEach","cmd","has","Error","add","getProject","filenames","ignore","realpath","dirnames","map","filename","dirname","pkgMap","Map","edges","rootPkg","pair","pkg","content","JSON","parse","encoding","cwd","dependencies","prefix","Object","entries","arr","startsWith","otherDirname","resolve","join","substring","length","push","pkgs","order","array","reverse","startAll","project","tempFile","fileSync","name","rootDir","script","index","get","scripts","start","basename","color","keywords","includes","testAll","tests","info2","installAll","args","clean","cleanAll","test","updateAll","packages","pkgName","devDependencies","buildAll","build","release","error","incrFlag","patch","minor","major","tagName","tagDescription","size","private","warning","run","argv","options","boolean","command","_","version","info","help","toLowerCase","slice"],"mappings":"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","file":"SnapTool.js","sourcesContent":["import { sync as globSync } from 'glob'\nimport parseArgs from 'minimist'\nimport { fullVersion } from './version'\nimport util from 'util'\nimport toposort from 'toposort'\nimport { readFileSync, writeFileSync, removeSync, existsSync, ensureDirSync } from 'fs-extra'\nimport path from 'path'\nimport process from 'process'\nimport { execSync } from 'child_process'\nimport tmp from 'tmp'\nimport { sync as commandExistsSync } from 'command-exists'\n\nexport class SnapTool {\n  constructor(log) {\n    this.log = log\n  }\n\n  ensureCommands(cmds) {\n    this.cmds = (this.cmds || new Set())\n\n    cmds.forEach(cmd => {\n      if (!this.cmds.has(cmd) &&!commandExistsSync(cmd)) {\n        throw new Error(`Command '${cmd}' does not exist.  Please install it.`)\n      } else {\n        this.cmds.add(cmd)\n      }\n    })\n  }\n\n  getProject() {\n    if (!existsSync('package.json')) {\n      throw new Error('The current directory does not contain a package.json file')\n    }\n\n    const filenames = globSync('**/package.json',\n      { ignore: ['**/node_modules/**', '**/scratch/**'], realpath: true })\n    const dirnames = filenames.map(filename => (path.dirname(filename)))\n    const pkgMap = new Map(dirnames.map(dirname => ([dirname, {}])))\n    let edges = []\n    let rootPkg = null\n\n    for (let pair of pkgMap) {\n      const [dirname, pkg] = pair\n      const content = JSON.parse(readFileSync(dirname + '/package.json', { encoding: 'utf8' }))\n\n      pkg.content = content\n\n      if (dirname === process.cwd()) {\n        rootPkg = pkg\n      } else if (content.dependencies) {\n        const prefix = 'file:'\n\n        Object.entries(content.dependencies).forEach(arr => {\n          if (arr[1].startsWith(prefix)) {\n            const otherDirname = path.resolve(path.join(dirname, arr[1].substring(prefix.length)))\n\n            if (pkgMap.has(otherDirname)) {\n              edges.push([dirname, otherDirname])\n            }\n          }\n        })\n      }\n    }\n\n    return {\n      pkgs: pkgMap,\n      order: toposort.array(dirnames, edges).reverse(),\n      rootPkg\n    }\n  }\n\n  startAll(project) {\n    this.ensureCommands(['osascript'])\n\n    const tempFile = tmp.fileSync().name\n    const rootDir = process.cwd()\n\n    let script = `\n    tell application \"iTerm\"\n      tell (create window with default profile)\n    `\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n\n      if (!pkg.content.scripts || !pkg.content.scripts.start) {\n        return\n      }\n\n      const name = path.basename(dirname)\n      let color\n      if (pkg.content.keywords && pkg.content.keywords.includes('library')) {\n        color = '0 255 0'\n      } else {\n        color = '0 198 255'\n      }\n      if (index == 0) {\n        script += `\n        tell current session of current tab\n          write text \"cd ${dirname}; title ${name}; tab-color ${color}; npm start\"\n        end tell\n        `\n      } else {\n        script += `\n        set newTab to (create tab with default profile)\n        tell newTab\n          tell current session of newTab\n            write text \"cd ${dirname}; title ${name}; tab-color ${color}; npm start\"\n          end tell\n        end tell\n        `\n      }\n    })\n    script += `\n      end tell\n    end tell\n    `\n\n    writeFileSync(tempFile, script)\n    execSync(`osascript < ${tempFile}`)\n  }\n\n  testAll(project) {\n    this.ensureCommands(['npm'])\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n\n      if (pkg.content.scripts && pkg.content.scripts.tests) {\n        this.log.info2(`Testing '${path.basename(dirname)}'...`)\n        execSync(`npm run tests`, { cwd: dirname})\n      }\n    })\n  }\n\n  installAll(project) {\n    this.ensureCommands(['npm'])\n\n    if (this.args.clean) {\n      this.cleanAll(project)\n    }\n\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n      const name = path.basename(dirname)\n\n      if (pkg.content.scripts && pkg.content.scripts.test) {\n        this.log.info2(`Installing '${name}'...`)\n        execSync(`npm install`, { cwd: dirname})\n      }\n    })\n  }\n\n  cleanAll(project) {\n    this.ensureCommands(['npm'])\n\n    project.order.forEach((dirname, index) => {\n      const name = path.basename(dirname)\n\n      this.log.info2(`Cleaning '${name}'...`)\n      removeSync(path.join(dirname, 'node_modules'))\n      removeSync(path.join(dirname, 'package-lock.json'))\n      removeSync(path.join(dirname, 'dist'))\n    })\n  }\n\n  updateAll(project) {\n    this.ensureCommands(['npm'])\n\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n      const name = path.basename(dirname)\n\n      this.args.packages.forEach((pkgName) => {\n        if ((pkg.content.dependencies && pkg.content.dependencies[pkgName]) ||\n          (pkg.content.devDependencies && pkg.content.devDependencies[pkgName])) {\n          this.log.info2(`Update '${pkgName}' in '${name}'...`)\n          execSync(`npm update ${pkgName}`, { cwd: dirname})\n        }\n      })\n    })\n  }\n\n  buildAll(project) {\n    this.ensureCommands(['npm'])\n\n    if (this.args.clean) {\n      this.installAll(project)\n    }\n\n    project.order.forEach((dirname, index) => {\n      const pkg = project.pkgs.get(dirname)\n      const name = path.basename(dirname)\n\n      if (pkg.content.scripts && pkg.content.scripts.build) {\n        this.log.info2(`Building '${name}'...`)\n        execSync('npm run build', { cwd: dirname})\n      }\n    })\n  }\n\n  release(project) {\n    this.ensureCommands(['stampver', 'git', 'npx', 'npm'])\n    this.log.info2('Checking for Uncommitted Changes...')\n    try {\n      execSync('git diff-index --quiet HEAD --')\n    } catch (error) {\n      throw new Error('There are uncomitted changes - commit or stash them and try again')\n    }\n\n    this.log.info2('Pulling...')\n    execSync('git pull')\n\n    this.log.info2('Updating Version...')\n    ensureDirSync('scratch')\n\n    const incrFlag = this.args.patch ? '-i patch' : this.args.minor ? '-i minor' : this.args.major ? '-i major' : ''\n\n    execSync(`npx stampver ${incrFlag} -u`)\n    const tagName = readFileSync('scratch/version.tag.txt')\n    const tagDescription = readFileSync('scratch/version.desc.txt')\n\n    try {\n      this.log.info2('Building...')\n      this.buildAll(project)\n      this.log.info2('Testing...')\n      this.testAll(project)\n\n      this.log.info2('Committing Version Changes...')\n      execSync('git add :/')\n\n      if (this.args.patch || this.args.minor || this.args.major) {\n        this.log.info2('Tagging...')\n        execSync(`git tag -a ${tagName} -m '${tagDescription}'`)\n      }\n\n      execSync(`git commit -m '${tagDescription}'`)\n    } catch (error) {\n      // Roll back version changes if anything went wrong\n      execSync('git checkout -- .')\n      return\n    }\n\n    this.log.info2('Pushing to Git...')\n    execSync('git push --follow-tags')\n\n    if (project.pkgs.size === 1 && !project.rootPkg.content.private) {\n      if (!this.args.patch && !this.args.minor && !this.args.major) {\n        this.log.warning(`Major, minor or patch number must be incremented to publish to NPM`)\n        return\n      }\n      this.log.info2('Publishing...')\n      execSync('npm publish')\n    }\n  }\n\n  async run(argv) {\n    const options = {\n      boolean: [ 'help', 'version', 'patch', 'minor', 'major', 'clean' ],\n    }\n    this.args = parseArgs(argv, options)\n\n    const command = this.args._[0]\n\n    if (this.args.version) {\n      this.log.info(`${fullVersion}`)\n      return 0\n    }\n\n    if (this.args.help || !command) {\n      this.log.info(`\nusage: snap <cmd> [options]\n\ncommands:\n  start       Run 'npm start' for all projects in new terminal tabs. Requires iTerm2 (https://www.iterm2.com/)\n  build       Run 'npm build' for all projects\n  test        Run 'npm test' for all projects\n  update      Run 'npm update <pkg>...' for all projects\n  install     Run 'npm install' for all projects\n  clean       Remove 'node_modules' and distribution files for all packages\n  release     Increment version, run build' and 'test', tag and release non-private to 'npm'\n\noptions:\n  --patch | --minor | --major   Release a patch, minor or major version. For 'release' command only.\n  --clean                       Do a clean 'build' or 'install'.\n  --help                        Shows this help.\n  --version                     Shows the tool version.\n`)\n      return 0\n    }\n\n    const project = this.getProject()\n\n    switch (command.toLowerCase()) {\n      case 'start':\n        this.startAll(project)\n        break\n      case 'build':\n        this.buildAll(project)\n        break\n      case 'test':\n        this.testAll(project)\n        break\n      case 'release':\n        this.release(project)\n        break\n      case 'clean':\n        this.cleanAll(project)\n        break\n      case 'install':\n        this.installAll(project)\n        break\n      case 'update':\n        this.args.packages = this.args._.slice(1)\n        this.updateAll(project)\n        break\n      default:\n        this.log.error('Use --help to see available commands')\n        return -1\n    }\n\n    return 0\n  }\n}\n"]}