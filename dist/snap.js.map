{"version":3,"sources":["../src/snap.js"],"names":["log","info","console","error","info2","green","arguments","join","red","warning","yellow","ansibleOK","ansibleChanged","ansibleSkipping","cyan","ansibleError","debug","process","argv","includes","tool","basename","run","slice","then","exitCode","catch","message"],"mappings":";;AACA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM;AACVC,QAAMC,QAAQC,KADJ;AAEVC,SAAO,YAAW;AAChBF,YAAQC,KAAR,CAAc,gBAAME,KAAN,CAAY,CAAC,GAAGC,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAZ,CAAd;AACD,GAJS;AAKVJ,SAAO,YAAW;AAChBD,YAAQC,KAAR,CAAc,gBAAMK,GAAN,CAAU,QAAV,EAAoB,CAAC,GAAGF,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAApB,CAAd;AACD,GAPS;AAQVE,WAAS,YAAW;AAClBP,YAAQC,KAAR,CAAc,gBAAMO,MAAN,CAAa,UAAb,EAAyB,CAAC,GAAGJ,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAzB,CAAd;AACD,GAVS;AAWVI,aAAW,YAAW;AACpBT,YAAQC,KAAR,CAAc,gBAAME,KAAN,CAAY,CAAC,GAAGC,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAZ,CAAd;AACD,GAbS;AAcVK,kBAAgB,YAAW;AACzBV,YAAQC,KAAR,CAAc,gBAAMO,MAAN,CAAa,CAAC,GAAGJ,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAb,CAAd;AACD,GAhBS;AAiBVM,mBAAiB,YAAW;AAC1BX,YAAQC,KAAR,CAAc,gBAAMW,IAAN,CAAW,CAAC,GAAGR,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAX,CAAd;AACD,GAnBS;AAoBVQ,gBAAc,YAAW;AACvBb,YAAQC,KAAR,CAAc,gBAAMK,GAAN,CAAU,CAAC,GAAGF,SAAJ,EAAeC,IAAf,CAAoB,GAApB,CAAV,CAAd;AACD;AAtBS,CAAZ;;AAyBA,MAAMS,QAAQC,QAAQC,IAAR,CAAaC,QAAb,CAAsB,SAAtB,CAAd;AACA,MAAMC,OAAO,uBAAa,eAAKC,QAAL,CAAcJ,QAAQC,IAAR,CAAa,CAAb,CAAd,EAA+B,KAA/B,CAAb,EAAoDlB,GAApD,CAAb;;AAEAoB,KACGE,GADH,CACOL,QAAQC,IAAR,CAAaK,KAAb,CAAmB,CAAnB,CADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBR,UAAQQ,QAAR,GAAmBA,QAAnB;AACD,CAJH,EAKGC,KALH,CAKUvB,KAAD,IAAW;AAChBc,UAAQQ,QAAR,GAAmB,GAAnB;;AAEA,MAAItB,KAAJ,EAAW;AACTH,QAAIG,KAAJ,CAAUA,MAAMwB,OAAhB;AACA,QAAIX,KAAJ,EAAW;AACTd,cAAQC,KAAR,CAAcA,KAAd;AACD;AACF;AACF,CAdH","file":"snap.js","sourcesContent":["\nimport { SnapTool } from \"./SnapTool\"\nimport chalk from \"chalk\"\nimport path from \"path\"\n\nconst log = {\n  info: console.error,\n  info2: function() {\n    console.error(chalk.green([...arguments].join(\" \")))\n  },\n  error: function() {\n    console.error(chalk.red(\"error:\", [...arguments].join(\" \")))\n  },\n  warning: function() {\n    console.error(chalk.yellow(\"warning:\", [...arguments].join(\" \")))\n  },\n  ansibleOK: function() {\n    console.error(chalk.green([...arguments].join(\" \")))\n  },\n  ansibleChanged: function() {\n    console.error(chalk.yellow([...arguments].join(\" \")))\n  },\n  ansibleSkipping: function() {\n    console.error(chalk.cyan([...arguments].join(\" \")))\n  },\n  ansibleError: function() {\n    console.error(chalk.red([...arguments].join(\" \")))\n  },\n}\n\nconst debug = process.argv.includes(\"--debug\")\nconst tool = new SnapTool(path.basename(process.argv[1], \".js\"), log)\n\ntool\n  .run(process.argv.slice(2))\n  .then((exitCode) => {\n    process.exitCode = exitCode\n  })\n  .catch((error) => {\n    process.exitCode = 200\n\n    if (error) {\n      log.error(error.message)\n      if (debug) {\n        console.error(error)\n      }\n    }\n  })\n"]}